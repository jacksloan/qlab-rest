/* tslint:disable */
/* eslint-disable */
/**
 * QLab OSC Rest Proxy
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WorkspaceIdCueListsResponseData
 */
export interface WorkspaceIdCueListsResponseData {
    /**
     * 
     * @type {string}
     * @memberof WorkspaceIdCueListsResponseData
     */
    number?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceIdCueListsResponseData
     */
    uniqueID?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof WorkspaceIdCueListsResponseData
     */
    cues?: Array<object>;
    /**
     * 
     * @type {boolean}
     * @memberof WorkspaceIdCueListsResponseData
     */
    flagged?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceIdCueListsResponseData
     */
    listName?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceIdCueListsResponseData
     */
    type?: WorkspaceIdCueListsResponseDataTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof WorkspaceIdCueListsResponseData
     */
    colorName?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WorkspaceIdCueListsResponseData
     */
    name?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof WorkspaceIdCueListsResponseData
     */
    armed?: boolean;
}

/**
* @export
* @enum {string}
*/
export enum WorkspaceIdCueListsResponseDataTypeEnum {
    Group = 'Group',
    Audio = 'Audio',
    Video = 'Video',
    Text = 'Text',
    Camera = 'Camera',
    Mic = 'Mic',
    Light = 'Light',
    Fade = 'Fade',
    Network = 'Network',
    Midi = 'Midi'
}

export function WorkspaceIdCueListsResponseDataFromJSON(json: any): WorkspaceIdCueListsResponseData {
    return WorkspaceIdCueListsResponseDataFromJSONTyped(json, false);
}

export function WorkspaceIdCueListsResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkspaceIdCueListsResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'number': !exists(json, 'number') ? undefined : json['number'],
        'uniqueID': !exists(json, 'uniqueID') ? undefined : json['uniqueID'],
        'cues': !exists(json, 'cues') ? undefined : json['cues'],
        'flagged': !exists(json, 'flagged') ? undefined : json['flagged'],
        'listName': !exists(json, 'listName') ? undefined : json['listName'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'colorName': !exists(json, 'colorName') ? undefined : json['colorName'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'armed': !exists(json, 'armed') ? undefined : json['armed'],
    };
}

export function WorkspaceIdCueListsResponseDataToJSON(value?: WorkspaceIdCueListsResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'number': value.number,
        'uniqueID': value.uniqueID,
        'cues': value.cues,
        'flagged': value.flagged,
        'listName': value.listName,
        'type': value.type,
        'colorName': value.colorName,
        'name': value.name,
        'armed': value.armed,
    };
}

