{
  "openapi": "3.0.2",
  "servers": [{ "url": "/api" }],
  "info": { "title": "QLab OSC Rest Proxy", "version": "1.0" },
  "paths": {
    "/auditionWindow": {
      "post": {
        "operationId": "auditionWindow",
        "description": "Show or hide the Audition Window. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current visibility of the Audition Window.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditionWindowResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuditionWindowRequest" }
            }
          }
        }
      }
    },
    "/toggleAuditionWindow": {
      "post": {
        "operationId": "toggleAuditionWindow",
        "description": "Show or hide the Audition Window.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToggleAuditionWindowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fontNames": {
      "post": {
        "operationId": "fontNames",
        "description": "Return an array of the names/PostScript names of all available fonts. For example: [\n  \"AppleColorEmoji\",\n  \"AppleSDGothicNeo-Bold\",\n  \"AppleSDGothicNeo-ExtraBold\",\n  \"AppleSDGothicNeo-Heavy\",\n  \"AppleSDGothicNeo-Light\",\n  ...\n]",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FontNamesResponse" }
              }
            }
          }
        }
      }
    },
    "/fontFamiliesAndStyles": {
      "post": {
        "operationId": "fontFamiliesAndStyles",
        "description": "Return a dictionary with each available font family name (e.g. “Helvetica”, “Courier New”) paired with an array of its available styles (e.g. “Regular”, “Light Oblique”). For example: {\n  \"Apple Color Emoji\" :\n    [\n      \"Regular\"\n    ],\n  \"Apple SD Gothic Neo\" :\n    [\n      \"Regular\",\n      \"Medium\",\n      \"Light\",\n      \"UltraLight\",\n      \"Thin\",\n      \"SemiBold\",\n      \"Bold\",\n      \"ExtraBold\",\n      \"Heavy\"\n    ],\n  ...\n}",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FontFamiliesAndStylesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/liveFadePreview": {
      "post": {
        "operationId": "liveFadePreview",
        "description": "Enable or disable live fade preview. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current status of live fade preview.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveFadePreviewResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiveFadePreviewRequest"
              }
            }
          }
        }
      }
    },
    "/toggleLiveFadePreview": {
      "post": {
        "operationId": "toggleLiveFadePreview",
        "description": "Enable or disable live fade preview.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToggleLiveFadePreviewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/artNetEnabled": {
      "post": {
        "operationId": "overridesArtNetEnabled",
        "description": "Set the Art-net output override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the Art-net output override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesArtNetEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesArtNetEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleArtNet": {
      "post": {
        "operationId": "overridesToggleArtNet",
        "description": "Enable or disable Art-net output.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleArtNetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/midiInputEnabled": {
      "post": {
        "operationId": "overridesMidiInputEnabled",
        "description": "Set the MIDI input override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the MIDI input override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesMidiInputEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesMidiInputEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleMidiInput": {
      "post": {
        "operationId": "overridesToggleMidiInput",
        "description": "Enable or disable MIDI input.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleMidiInputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/midiOutputEnabled": {
      "post": {
        "operationId": "overridesMidiOutputEnabled",
        "description": "Set the MIDI output override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the MIDI output override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesMidiOutputEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesMidiOutputEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleMidiOutput": {
      "post": {
        "operationId": "overridesToggleMidiOutput",
        "description": "Enable or disable MIDI output.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleMidiOutputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/mscInputEnabled": {
      "post": {
        "operationId": "overridesMscInputEnabled",
        "description": "Set the MSC input override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the MSC input override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesMscInputEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesMscInputEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleMscInput": {
      "post": {
        "operationId": "overridesToggleMscInput",
        "description": "Enable or disable MSC input.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleMscInputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/mscOutputEnabled": {
      "post": {
        "operationId": "overridesMscOutputEnabled",
        "description": "Set the MSC output override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the MSC output override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesMscOutputEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesMscOutputEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleMscOutput": {
      "post": {
        "operationId": "overridesToggleMscOutput",
        "description": "Enable or disable MSC output.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleMscOutputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/sysexInputEnabled": {
      "post": {
        "operationId": "overridesSysexInputEnabled",
        "description": "Set the MIDI SysEx input override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the MIDI SysEx input override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesSysexInputEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesSysexInputEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleSysexInput": {
      "post": {
        "operationId": "overridesToggleSysexInput",
        "description": "Enable or disable SysEx input.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleSysexInputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/sysexOutputEnabled": {
      "post": {
        "operationId": "overridesSysexOutputEnabled",
        "description": "Set the MIDI SysEx output override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the MIDI SysEx output override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesSysexOutputEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesSysexOutputEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleSysexOutput": {
      "post": {
        "operationId": "overridesToggleSysexOutput",
        "description": "Enable or disable SysEx output.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleSysexOutputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/oscInputEnabled": {
      "post": {
        "operationId": "overridesOscInputEnabled",
        "description": "Set the OSC input override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the OSC input override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesOscInputEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesOscInputEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleOscInput": {
      "post": {
        "operationId": "overridesToggleOscInput",
        "description": "Enable or disable OSC input.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleOscInputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/oscOutputEnabled": {
      "post": {
        "operationId": "overridesOscOutputEnabled",
        "description": "Set the OSC output override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the OSC output override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesOscOutputEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesOscOutputEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleOscOutput": {
      "post": {
        "operationId": "overridesToggleOscOutput",
        "description": "Enable or disable OSC output.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleOscOutputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/timecodeInputEnabled": {
      "post": {
        "operationId": "overridesTimecodeInputEnabled",
        "description": "Set the timecode input override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the timecode input override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesTimecodeInputEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesTimecodeInputEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleTimecodeInput": {
      "post": {
        "operationId": "overridesToggleTimecodeInput",
        "description": "Enable or disable timecode input.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleTimecodeInputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrides/timecodeOutputEnabled": {
      "post": {
        "operationId": "overridesTimecodeOutputEnabled",
        "description": "Set the timecode output override to true or false. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current state of the timecode output override.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesTimecodeOutputEnabledResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridesTimecodeOutputEnabledRequest"
              }
            }
          }
        }
      }
    },
    "/overrides/toggleTimecodeOutput": {
      "post": {
        "operationId": "overridesToggleTimecodeOutput",
        "description": "Enable or disable timecode output.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverridesToggleTimecodeOutputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/overrideWindow": {
      "post": {
        "operationId": "overrideWindow",
        "description": "Show or hide the Override Window. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current visibility of the Override Window.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverrideWindowResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OverrideWindowRequest" }
            }
          }
        }
      }
    },
    "/toggleOverrideWindow": {
      "post": {
        "operationId": "toggleOverrideWindow",
        "description": "Show or hide the Override Window.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToggleOverrideWindowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/replyFormat": {
      "post": {
        "operationId": "replyFormat",
        "description": "Set the format of QLab’s reply messages to suit your needs. format_string is a string containing your desired reply format. The string can optionally contain the following tokens that will be replaced when sending the reply: \n#workspace_id# - the workspace ID\n#address# - the OSC address of the reply\n#status# - ok / error\n#data# - the data of the reply\n QLab will do its best to create a reply message with the format you specify. For example, let’s say you set QLab’s replay format with the following message: /replyFormat “#address# #data#” Then, if you sent /cue/1/colorName, you would get the reply: /cue/1/colorName green. The #address# token resolves to colorName, since that was the OSC address you sent, and the #data# token resolves to green, assuming the color of cue 1 is in fact green.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReplyFormatResponse" }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReplyFormatRequest" }
            }
          }
        }
      }
    },
    "/timecodeWindow": {
      "post": {
        "operationId": "timecodeWindow",
        "description": "Show or hide the Timecode Window. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current visibility of the Timecode Window.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimecodeWindowResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TimecodeWindowRequest" }
            }
          }
        }
      }
    },
    "/toggleTimecodeWindow": {
      "post": {
        "operationId": "toggleTimecodeWindow",
        "description": "Show or hide the Timecode Window.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToggleTimecodeWindowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "post": {
        "operationId": "version",
        "description": "Return QLab’s version number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/VersionResponse" }
              }
            }
          }
        }
      }
    },
    "/workingDirectory": {
      "post": {
        "operationId": "workingDirectory",
        "description": "Get or set the current working directory. If provided, the path string is the working directory you wish to set. You can provide two kinds of paths: \nFull paths, e.g. /a/full/path/to/some/directory/\nPaths beginning with a tilde, e.g. ~/a/path/to some/directory\n Paths beginning with a tilde (~) will be expanded; the tilde signifies “relative to the user’s home directory.”",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingDirectoryResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingDirectoryRequest"
              }
            }
          }
        }
      }
    },
    "/workspaces": {
      "post": {
        "operationId": "workspaces",
        "description": "Return an array of workspace dictionaries: [\n    {\n        \"uniqueID\": string,\n        \"displayName\": string,\n        \"hasPasscode\": number,\n        \"version\": string\n    }\n] Workspace methods Workspace OSC methods use the form /workspace/{id}/command, where {id} may be either the display name of the workspace, such as hamlet.qlab4, or the unique ID of the workspace, which can be found in the Info tab of the Status Window. Note, however, that addressing by display name will work only if the display name is composed of characters allowed in OSC method names. This does NOT include spaces, unicode, diacritical, or other “special” characters. Addressing a workspace by its unique ID looks like this: /workspace/1B11984A-3EBC-4A9C-A004-B9E3AA32DA6B/go Addressing a workspace by its display name looks like this: /workspace/hamlet.qlab4/go If you send a workspace method without the /workspace/{id} portion of the address, then the method will be sent to the current workspace, which is the front-most, active document. So, if your hamlet.qlab4 workspace is the front-most, active document, and you send QLab the OSC command /go, then hamlet.qlab4 will GO. Workspaces respond to the following commands:",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WorkspacesResponse" }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/basePath": {
      "post": {
        "operationId": "workspaceIdBasePath",
        "description": "Return a string which is the path to the directory containing the QLab workspace. If the workspace is not yet saved, this will be an empty string.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdBasePathResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/connect": {
      "post": {
        "operationId": "workspaceIdConnect",
        "description": "Connect to this workspace with an optional passcode string. If the workspace has a passcode, you MUST supply it before any other commands will be accepted by the workspace or the cues it contains. If the workspace does not have a passcode, the /workspace/{id}/connect method is optional. Returns ok if there is no passcode, or the passcode matches. Returns badpass if the passcode does not match. Returns error if the workspace does not exist.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdConnectResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdConnectRequest"
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/disconnect": {
      "post": {
        "operationId": "workspaceIdDisconnect",
        "description": "Disconnect from this workspace. You should invoke this method when you will no longer be sending messages to this workspace. If you are communicating to QLab via UDP, QLab will automatically disconnect your client if it has not heard any messages from it in the last 61 seconds. Any message (e.g. “thump”) will serve to keep the client connected. If you are disconnected and the workspace has a password, you will need to reconnect with that password before further commands will be accepted. If you are communicating to QLab via TCP, QLab will not automatically disconnect your client. The client will remain connected until the client sends the disconnect message or the TCP connection itself is disconnected.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdDisconnectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/doubleGoWindowRemaining": {
      "post": {
        "operationId": "workspaceIdDoubleGoWindowRemaining",
        "description": "Read-only; when workspace “double go protection” is engaged, return the number of seconds that must elapse until the next GO is permitted. Returns 0 when a GO is currently allowed or if double go protection is not enabled.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdDoubleGoWindowRemainingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/cueLists": {
      "post": {
        "operationId": "workspaceIdCueLists",
        "description": "All return an array of cue dictionaries: [\n    {\n        \"uniqueID\": string,\n        \"number\": string\n        \"name\": string\n        \"listName\": string\n        \"type\": string\n        \"colorName\": string\n        \"flagged\": number\n        \"armed\": number\n    }\n] If any of the included cues are Group cues, the dictionary will include an array of cue dictionaries for all children in the group: [\n    {\n        \"uniqueID\": string,\n        \"number\": string\n        \"name\": string\n        \"listName\": string\n        \"type\": string\n        \"colorName\": string\n        \"flagged\": number\n        \"armed\": number\n        \"cues\": [ { }, { }, { } ]\n    }\n] colorName may be none, red, orange, green, blue, or purple. Note: Methods that reply with an array of cue dictionaries may generate large OSC messages. These messages can easily grow larger than the maximum size supported by UDP datagrams. If you need to access these methods you should communicate to QLab over a TCP connection rather than a UDP connection. Starting with QLab 4.4.3, versions of these commands are available which return less data: These methods are identical to the similar methods above, except they do not include any data for the children of Group cues. These methods return only the cue IDs of the cues in question, and not all the other information about them. Cue IDs of children of Group cues is included. These methods are identical to the similar methods above, except they do not include any data for the children of Group cues.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdCueListsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/dashboard/clear": {
      "post": {
        "operationId": "workspaceIdDashboardClear",
        "description": "These commands are the equivalent of clicking their corresponding buttons in the Light Dashboard.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdDashboardClearResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/dashboard/redo": {
      "post": {
        "operationId": "workspaceIdDashboardRedo",
        "description": "Re-does the last action taken in the Light Dashboard. If nothing has been un-done in the Dashboard, this command has no effect.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdDashboardRedoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/dashboard/mode": {
      "post": {
        "operationId": "workspaceIdDashboardMode",
        "description": "Set the Light Dashboard’s view mode to string. Supported modes are sliders and tiles. If no argument is provided, this method does nothing.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdDashboardModeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdDashboardModeRequest"
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/dashboard/nextMode": {
      "post": {
        "operationId": "workspaceIdDashboardNextMode",
        "description": "Toggles between “sliders” and “tiles” view modes in the Light Dashboard.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdDashboardNextModeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/dashboard/setLight": {
      "post": {
        "operationId": "workspaceIdDashboardSetLight",
        "description": "Set instrument or light group string to level setting in the Light Dashboard. string may include a parameter name; if it does not, the default parameter for the specified instrument or light group will be addressed. setting must be an acceptable value for the specified parameter of the specified instrument or group. If setting is a decimal number, the Light Dashboard may round it to the nearest equivalent DMX value. time is an optional whole or decimal number. If provided, the parameter will be faded from its current value to level over that many seconds. If time is omitted, it will be assumed to be 0.0 seconds.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdDashboardSetLightResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdDashboardSetLightRequest"
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/dashboard/undo": {
      "post": {
        "operationId": "workspaceIdDashboardUndo",
        "description": "Un-does the last action taken in the Light Dashboard. If nothing has been done in the Dashboard, this command has no effect.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdDashboardUndoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/delete/{cue_number}": {
      "post": {
        "operationId": "workspaceIdDeleteCueNumber",
        "description": "Delete the specified cue(s).",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdDeleteCueNumberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/fullScreen": {
      "post": {
        "operationId": "workspaceIdFullScreen",
        "description": "Number is interpreted as a boolean, and sets whether the workspace is displayed in macOS’ full screen mode. If no argument is provided, this returns the current full screen status of the workspace.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdFullScreenResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdFullScreenRequest"
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/toggleFullScreen": {
      "post": {
        "operationId": "workspaceIdToggleFullScreen",
        "description": "Turn full screen mode on or off.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdToggleFullScreenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/go": {
      "post": {
        "operationId": "workspaceIdGo",
        "description": "Tell the current cue list of the given workspace to GO. cue_number is optional; if given, it must match a cue number in the given workspace. QLab will jump to the specified cue and then GO. If no argument is provided, the current cue list in the given workspace will GO on whatever cue is currently standing by. In this OSC method, QLab cannot use the same technique it uses in other places to turn numbers into strings when necessary. Therefore, when using cue_number in this method, it must always be enclosed in quotation marks. \n : /go\n : /go \"53\"\n : /go 53\n",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdGoResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WorkspaceIdGoRequest" }
            }
          }
        }
      }
    },
    "/workspace/{id}/go/{cue_number}": {
      "post": {
        "operationId": "workspaceIdGoCueNumber",
        "description": "Tell QLab to jump to cue cue_number and then GO. cue_number must match a cue number in the given workspace.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdGoCueNumberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/lightDashboard": {
      "post": {
        "operationId": "workspaceIdLightDashboard",
        "description": "Show or hide the Light Dashboard. number is interpreted as a boolean; 0 equals false, any other number equals true. If no argument is provided, return the current visibility of the Light Dashboard.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdLightDashboardResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdLightDashboardRequest"
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/toggleLightDashboard": {
      "post": {
        "operationId": "workspaceIdToggleLightDashboard",
        "description": "If the Light Dashboard is closed, open it and place focus in the command line. If the Light Dashboard is open, but focus is not in the command line, place focus in the command line. If the Light Dashboard is open and focus is in the command line, move focus to the main workspace window.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdToggleLightDashboardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/move/{cue_id}": {
      "post": {
        "operationId": "workspaceIdMoveCueId",
        "description": "Move the specified cue from its current position to the given new_index position within the cue’s current parent Group, Cart, or List. new_index is required and must be an integer. new_parent_cue_id is optional, and must be a string. If new_parent_cue_id is provided, move the specified cue from its current position to the given new_index position within the Group, Cart, or List whose unique ID is new_parent_cue_id. If the move fails for any reason (i.e. a Group Cue cannot be moved inside of another Group cue that it already contains), QLab will send an error reply. If the move succeeds, QLab will reply with “status”: “ok” and “data” containing a dictionary with 2 key/value pairs: [\n    {\n        \"parent_cue_id\": string,\n        \"index\": integer\n    }\n] parent_cue_id is a string with the unique ID of the Group, Cart, or List that contains the cue that was moved.\nindex is an integer with the index of the position of the moved cue in its new parent.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "cue_id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdMoveCueIdResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdMoveCueIdRequest"
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/new": {
      "post": {
        "operationId": "workspaceIdNew",
        "description": "Create a new cue. cue_type is a string stating which kind of cue to create. Supported strings include: audio, mic, video, camera, text, light, fade, network, midi, midi file, timecode, group, start, stop, pause, load, reset, devamp, goto, target, arm, disarm, wait, memo, script, list, cuelist, cue list, cart, cuecart, or cue cart. This method returns the unique ID of the new cue. The newly created cue will also be selected, so subsequent commands can address the new cue either using the unique ID or simply addressing the currently selected cue. This method has three optional additional arguments: /workspace/{id}/new {cue_type} {cue_ID} {cart_row} {cart_column} If {cue_ID} is supplied, the new cue will be created after that cue. If {cue_ID} specifies a cart, the new cue will be created within the cart. You must then specify the position in the cart using {cart_row} and {cart_column}. {cart_row} and {cart_column} must be integers.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdNewResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WorkspaceIdNewRequest" }
            }
          }
        }
      }
    },
    "/workspace/{id}/panic": {
      "post": {
        "operationId": "workspaceIdPanic",
        "description": "Tell the workspace to panic. A panic is a brief gradual fade out leading into a hard stop. A double panic will trigger an immediate hard stop.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdPanicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/panicInTime": {
      "post": {
        "operationId": "workspaceIdPanicInTime",
        "description": "Panic over the specified time, rather than over the panic time defined in the workspace.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdPanicInTimeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdPanicInTimeRequest"
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/pause": {
      "post": {
        "operationId": "workspaceIdPause",
        "description": "Pause all currently running cues in the workspace.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdPauseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/playhead/{cue_number}": {
      "post": {
        "operationId": "workspaceIdPlayheadCueNumber",
        "description": "Set the playhead (also called the playback position) of the active cue list to the given cue. When using /playheadId or playbackPositionId, sending the value none will unset the playhead.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdPlayheadCueNumberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/playhead/next": {
      "post": {
        "operationId": "workspaceIdPlayheadNext",
        "description": "Move the playhead (also called the playback position) of the active cue list to the next cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdPlayheadNextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/playhead/previous": {
      "post": {
        "operationId": "workspaceIdPlayheadPrevious",
        "description": "Move the playhead (also called the playback position) of the active cue list to the previous cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdPlayheadPreviousResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/playhead/nextSequence": {
      "post": {
        "operationId": "workspaceIdPlayheadNextSequence",
        "description": "Move the playhead (also called the playback position) of the active cue list to the next cue sequence.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdPlayheadNextSequenceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/playhead/previousSequence": {
      "post": {
        "operationId": "workspaceIdPlayheadPreviousSequence",
        "description": "Move the playhead (also called the playback position) of the active cue list to the previous cue sequence.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdPlayheadPreviousSequenceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/renumber": {
      "post": {
        "operationId": "workspaceIdRenumber",
        "description": "Renumber the selected cues, starting at startNumber and incrementing by incrementNumber.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdRenumberResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdRenumberRequest"
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/reset": {
      "post": {
        "operationId": "workspaceIdReset",
        "description": "Reset the workspace. Resetting stops all cues, returns the playhead to the top of the current cue list, and restores any temporary changes made to cues (such as retargeting via a Target cue or adjustments using a “live” OSC method.)",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdResetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/resume": {
      "post": {
        "operationId": "workspaceIdResume",
        "description": "Un-pause all paused cues in the workspace.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdResumeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/save": {
      "post": {
        "operationId": "workspaceIdSave",
        "description": "Tell the given workspace to save itself to disk.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdSaveResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/select/{cue_number}": {
      "post": {
        "operationId": "workspaceIdSelectCueNumber",
        "description": "Select the specified cue(s).",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdSelectCueNumberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/select/next": {
      "post": {
        "operationId": "workspaceIdSelectNext",
        "description": "Move the selection down one cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdSelectNextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/select/previous": {
      "post": {
        "operationId": "workspaceIdSelectPrevious",
        "description": "Move the selection up one cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdSelectPreviousResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/selectionIsPlayhead": {
      "post": {
        "operationId": "workspaceIdSelectionIsPlayhead",
        "description": "Number is interpreted as a boolean, and sets whether the selection is locked to the playhead. If no argument is provided, return whether the selection is currently locked to the playhead.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdSelectionIsPlayheadResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdSelectionIsPlayheadRequest"
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/toggleSelectionIsPlayhead": {
      "post": {
        "operationId": "workspaceIdToggleSelectionIsPlayhead",
        "description": "Lock or unlock the selection to the playhead.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdToggleSelectionIsPlayheadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/showMode": {
      "post": {
        "operationId": "workspaceIdShowMode",
        "description": "Number is interpreted as a boolean, and sets whether the workspace is in show mode. If no argument is provided, return whether the workspace is currently in show mode.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdShowModeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdShowModeRequest"
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/toggleEditShowMode": {
      "post": {
        "operationId": "workspaceIdToggleEditShowMode",
        "description": "Switch between show mode and edit mode.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdToggleEditShowModeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/stop": {
      "post": {
        "operationId": "workspaceIdStop",
        "description": "Stop playback but allow effects to continue rendering. e.g., playback stops, but reverbs decay naturally.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdStopResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/hardStop": {
      "post": {
        "operationId": "workspaceIdHardStop",
        "description": "Stop playback and cut all effects immediately.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdHardStopResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/thump": {
      "post": {
        "operationId": "workspaceIdThump",
        "description": "A simple heartbeat method for this workspace. Returns the data “thump”. (Thump-thump, thump-thump.)",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdThumpResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/undo": {
      "post": {
        "operationId": "workspaceIdUndo",
        "description": "Undo or redo the most recent change of the workspace.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdUndoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/{id}/updates": {
      "post": {
        "operationId": "workspaceIdUpdates",
        "description": "number is interpreted as a boolean. If yes, your client wants push notifications of cue changes. If no, your client no longer wants push notifications of cue changes.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceIdUpdatesResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIdUpdatesRequest"
              }
            }
          }
        }
      }
    },
    "/settings/audio/maxVolume": {
      "post": {
        "operationId": "settingsAudioMaxVolume",
        "description": "Read-only; return the decibel value of the “Min:” and “Max:” levels from the Volume Limits section of Workspace Settings > Audio.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsAudioMaxVolumeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/audio/outputChannelNames": {
      "post": {
        "operationId": "settingsAudioOutputChannelNames",
        "description": "Read-only; return a JSON dictionary of output names for Audio or Mic output patches. The keys in the dictionary are the patch numbers, and the values are dictionaries of output channel numbers and names. If a given patch does not have customized output names, that patch will not be included in the dictionary.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsAudioOutputChannelNamesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/general/minGoTime": {
      "post": {
        "operationId": "settingsGeneralMinGoTime",
        "description": "If number is given, set the minimum time required between each GO to number seconds. If not, return the minimum time required between each GO.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsGeneralMinGoTimeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsGeneralMinGoTimeRequest"
              }
            }
          }
        }
      }
    },
    "/settings/video/surfaces": {
      "post": {
        "operationId": "settingsVideoSurfaces",
        "description": "Read-only; return an array of dictionaries describing all video surfaces defined in the workspace. Each dictionary takes the form: {\n    \"surfaceID\" : number,\n    \"surfaceName\" : string,\n    \"width\" : number,\n    \"height\" : number,\n    \"warpType\" : number,\n    \"patchSplitsX\": array of numbers,\n    \"patchSplitsY\": array of numbers,\n    \"screenAssignments\": array (see below),\n} Each item in the screenAssignments array is a dictionary in this form: {\n    \"name\" : string,\n    \"frame\" : string representation of a rectangle (i.e. \"{{0,0} {1280,800}}\"),\n    \"enableGrid\" : number (BOOL),\n    \"enableGuides\" : number (BOOL),\n    \"controlPoints\" : array containing arrays of string representations of points (i.e. \"{0,0}\"),\n}",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsVideoSurfacesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/video/surfaces/{surfaceID}": {
      "post": {
        "operationId": "settingsVideoSurfacesSurfaceId",
        "description": "Read-only; return a dictionary for the specified surface. The dictionaries take the same form as above.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "surfaceID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsVideoSurfacesSurfaceIDResponse"
                }
              }
            }
          }
        }
      }
    },
    "/settings/video/surfaces/{surfaceID}/{screenIndex}/enableGrid": {
      "post": {
        "operationId": "settingsVideoSurfacesSurfaceIdScreenIndexEnableGrid",
        "description": "Shows or hides the grid display for the specified screen in the specified surface. number is interpreted as a boolean; 0 equals false (don’t show grid), any other number equals true (do show grid.) If no argument is provided, return the current display state of the grid. screenIndex is a range of whole numbers, starting with 0, representing the list of screens assigned to a surface. The first screen listed in the Surface Editor is screenIndex 0, the second is screenIndex 1, and so on.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "surfaceID",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "screenIndex",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsVideoSurfacesSurfaceIDScreenIndexEnableGridResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsVideoSurfacesSurfaceIDScreenIndexEnableGridRequest"
              }
            }
          }
        }
      }
    },
    "/settings/video/surfaces/{surfaceID}/{screenIndex}/enableGuides": {
      "post": {
        "operationId": "settingsVideoSurfacesSurfaceIdScreenIndexEnableGuides",
        "description": "Shows or hides the guides on the specified screen in the specified surface. number is interpreted as a boolean; 0 equals false (don’t show guides), any other number equals true (do show grid.) If no argument is provided, return the current display state of the guides.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "surfaceID",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "screenIndex",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsVideoSurfacesSurfaceIDScreenIndexEnableGuidesResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsVideoSurfacesSurfaceIDScreenIndexEnableGuidesRequest"
              }
            }
          }
        }
      }
    },
    "/settings/video/surfaces/{surfaceID}/{screenIndex}/origin": {
      "post": {
        "operationId": "settingsVideoSurfacesSurfaceIdScreenIndexOrigin",
        "description": "Set the origin point for the specified screen in the specified surface to location. location must be a string of the form: {xPosition,yPosition}, including the curly braces, where xPosition and yPosition are both integers. If no argument is provided, return the current location of the origin for the specified screen in the specified surface.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "surfaceID",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "screenIndex",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsVideoSurfacesSurfaceIDScreenIndexOriginResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsVideoSurfacesSurfaceIDScreenIndexOriginRequest"
              }
            }
          }
        }
      }
    },
    "/settings/video/surfaces/{surfaceID}/{screenIndex}/controlPoint": {
      "post": {
        "operationId": "settingsVideoSurfacesSurfaceIdScreenIndexControlPoint",
        "description": "Set the specified control point on the specified screen in the specified surface to location. location must be a string of the form: {xPosition,yPosition}, including the curly braces, where xPosition and yPosition are both integers. row_index and column_index refer to the grid of control points in their original, unaltered positions. If no argument is provided, return the current location of the specified control point on the specified screen in the specified surface.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "surfaceID",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "screenIndex",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsVideoSurfacesSurfaceIDScreenIndexControlPointResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsVideoSurfacesSurfaceIDScreenIndexControlPointRequest"
              }
            }
          }
        }
      }
    },
    "/settings/video/surfaces/{surfaceID}/{screenIndex}/resetControlPoints": {
      "post": {
        "operationId": "settingsVideoSurfacesSurfaceIdScreenIndexResetControlPoints",
        "description": "Reset all control points for the specified screen in the specified surface.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "surfaceID",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "screenIndex",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsVideoSurfacesSurfaceIDScreenIndexResetControlPointsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/actionElapsed": {
      "post": {
        "operationId": "cueCueNumberActionElapsed",
        "description": "Return the elapsed action (in seconds) of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberActionElapsedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/percentActionElapsed": {
      "post": {
        "operationId": "cueCueNumberPercentActionElapsed",
        "description": "Return the elapsed action (as a percentage of the total action) of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPercentActionElapsedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/allowsEditingDuration": {
      "post": {
        "operationId": "cueCueNumberAllowsEditingDuration",
        "description": "Return true if the specified cue has an editable duration, such as an Audio, Video, or Fade cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberAllowsEditingDurationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/armed": {
      "post": {
        "operationId": "cueCueNumberArmed",
        "description": "Get or set the armed state of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the armed state of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberArmedResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberArmedRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/autoLoad": {
      "post": {
        "operationId": "cueCueNumberAutoLoad",
        "description": "Get or set the auto-load state of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the auto-load state of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberAutoLoadResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberAutoLoadRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/cartPosition": {
      "post": {
        "operationId": "cueCueNumberCartPosition",
        "description": "Return an array with the row and column numbers for the specified cue’s position within a cart. A cue that is not contained within a cart will return [0,0].",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCartPositionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{number}/children/shallow": {
      "post": {
        "operationId": "cueNumberChildrenShallow",
        "description": "If the specified cue is a list, cart, or Group cue, return the cue numbers of the child cues of that list, cart, or Group. Nested Groups will not be queried, and so only the first “layer” of the cue hierarchy will be returned.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueNumberChildrenShallowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{number}/children/uniqueIDs": {
      "post": {
        "operationId": "cueNumberChildrenUniqueIDs",
        "description": "If the specified cue is a list, cart, or Group cue, return the cue IDs of the child cues of that list, cart, or Group, and the cue IDs of any children of nested Groups.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueNumberChildrenUniqueIDsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{number}/children/uniqueIDs/shallow": {
      "post": {
        "operationId": "cueNumberChildrenUniqueIDsShallow",
        "description": "If the specified cue is a list, cart, or Group cue, return the cue IDs of the child cues of that list, cart, or Group. Nested Groups will not be queried, and so only the first “layer” of the cue hierarchy will be returned.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueNumberChildrenUniqueIDsShallowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/colorName": {
      "post": {
        "operationId": "cueCueNumberColorName",
        "description": "If string is given, set the color of the specified cue to string. If not, return the pre-wait of the specified cue. Valid colors are none, red, orange, green, blue, and purple. Certain other colors may also be valid…",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberColorNameResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberColorNameRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/continueMode": {
      "post": {
        "operationId": "cueCueNumberContinueMode",
        "description": "If number is given, set the continue mode of the specified cue to number. If not, return the continue mode of the specified cue. Valid continue modes are: 0 - NO CONTINUE\n1 - AUTO CONTINUE\n2 - AUTO FOLLOW",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberContinueModeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberContinueModeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/cueTargetId": {
      "post": {
        "operationId": "cueCueNumberCueTargetId",
        "description": "If string is given, and if the specified cue can have cue targets, set the target of the specified cue to string. If not, return the cue ID of the target of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCueTargetIdResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberCueTargetIdRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/cueTargetNumber": {
      "post": {
        "operationId": "cueCueNumberCueTargetNumber",
        "description": "If string is given, and if the specified cue can have cue targets, set the target of the specified cue to string. If not, return the cue number of the target of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCueTargetNumberResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberCueTargetNumberRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/currentCueTarget": {
      "post": {
        "operationId": "cueCueNumberCurrentCueTarget",
        "description": "Read-only; return the cue ID of the current target of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCurrentCueTargetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/go": {
      "post": {
        "operationId": "cueCueNumberGo",
        "description": "If the specified cue is a cue list, then tell that cue list to GO. This GO respects the current playback position for that list, as well as double go protection for the workspace.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberGoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/tempCueTargetNumber": {
      "post": {
        "operationId": "cueCueNumberTempCueTargetNumber",
        "description": "If string is given, and if the specified cue can have cue targets, temporarily set the target of the specified cue to string. The specified cue will revert to its previous target if it is reset, if the workspace is reset, or if the workspace is closed and reopened. If string is not given, and the specified cue has a temporary target, return the cue number of that temporary target.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTempCueTargetNumberResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTempCueTargetNumberRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/tempCueTargetId": {
      "post": {
        "operationId": "cueCueNumberTempCueTargetId",
        "description": "This works exactly the same as /tempCueTargetNumber, but uses the cue ID of the target instead of the cue number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTempCueTargetIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/currentDuration": {
      "post": {
        "operationId": "cueCueNumberCurrentDuration",
        "description": "Read-only; return the current duration of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCurrentDurationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/tempDuration": {
      "post": {
        "operationId": "cueCueNumberTempDuration",
        "description": "If number is given, and if the specified cue has a duration, temporarily set the duration of the specified cue to number. The specified cue will revert to its previous duration if it is reset, if the workspace is reset, or if the workspace is closed and reopened. If number is not given, and if the specified cue has a temporary duration, return that temporary duration.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTempDurationResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTempDurationRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/currentFileTime": {
      "post": {
        "operationId": "cueCueNumberCurrentFileTime",
        "description": "Read-only; if the specified cue has a file target, return the current playback time of the target file in seconds. If the cue is not running, that’s 0. If the cue has been playing for ten and a half seconds, and the playback rate of the cue is 1.0, then the currentFileTime is 10.5.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCurrentFileTimeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/defaultName": {
      "post": {
        "operationId": "cueCueNumberDefaultName",
        "description": "Return the default name of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDefaultNameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/displayName": {
      "post": {
        "operationId": "cueCueNumberDisplayName",
        "description": "Return the display name of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDisplayNameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/listName": {
      "post": {
        "operationId": "cueCueNumberListName",
        "description": "Return the list name of the specified cue. The list name is the name that is displayed in the cue list, which can be either the default name, a manually set display name, or nothing.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberListNameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/duckLevel": {
      "post": {
        "operationId": "cueCueNumberDuckLevel",
        "description": "If number is given, set the duck (or boost) level of the specified cue to number. If not, return the duck or boost level of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDuckLevelResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberDuckLevelRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/duckOthers": {
      "post": {
        "operationId": "cueCueNumberDuckOthers",
        "description": "Get or set the state of the Duck audio of other cues checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the Duck audio of other cues checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDuckOthersResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberDuckOthersRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/duckTime": {
      "post": {
        "operationId": "cueCueNumberDuckTime",
        "description": "If number is given, set the Duck audio of other cues time of the specified cue to number. If not, return the Duck audio of other cues time of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDuckTimeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberDuckTimeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/duration": {
      "post": {
        "operationId": "cueCueNumberDuration",
        "description": "If number is given, and the selected cue has an editable duration, set the duration of the specified cue to number. If not, return the duration of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDurationResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberDurationRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/fadeAndStopOthers": {
      "post": {
        "operationId": "cueCueNumberFadeAndStopOthers",
        "description": "If number is given, set the Fade and stop mode of the specified cue to number. If not, return the Fade and stop mode of the specified cue. Mode 0 is equivalent to the Fade and stop checkbox being unchecked. Valid modes are: 0 - none\n1 - peers\n2 - list or cart\n3 - all",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberFadeAndStopOthersResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberFadeAndStopOthersRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/fadeAndStopOthersTime": {
      "post": {
        "operationId": "cueCueNumberFadeAndStopOthersTime",
        "description": "If number is given, set the Fade and stop others time of the specified cue to number. If not, return the Fade and stop others time of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberFadeAndStopOthersTimeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberFadeAndStopOthersTimeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/fileTarget": {
      "post": {
        "operationId": "cueCueNumberFileTarget",
        "description": "If string is given, and if the specified cue can have file targets, set the target of the specified cue to string. If not, return the target of the specified cue. You can provide a target using any of three kinds of paths: \nFull paths, e.g. /Volumes/MyDisk/path/to/some/file.wav\nPaths beginning with a tilde, e.g. ~/path/to some/file.mov\nRelative paths, e.g. this/is/a/relative/path.mid\n Paths beginning with a tilde (~) will be expanded; the tilde signifies “relative to the user’s home directory”. Relative paths will be interpreted according to the current working directory. Use QLab’s /workingDirectory method to set or get the current working directory.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberFileTargetResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberFileTargetRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/flagged": {
      "post": {
        "operationId": "cueCueNumberFlagged",
        "description": "Get or set the flagged state of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the flagged state of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberFlaggedResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberFlaggedRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/hasCueTargets": {
      "post": {
        "operationId": "cueCueNumberHasCueTargets",
        "description": "Read-only; return true if the specified cue is able to target another cue, such as a Fade or Stop cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberHasCueTargetsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/hasFileTargets": {
      "post": {
        "operationId": "cueCueNumberHasFileTargets",
        "description": "Read-only; return true if the specified cue is able to target a file, such as an Audio or Video cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberHasFileTargetsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/isActionRunning": {
      "post": {
        "operationId": "cueCueNumberIsActionRunning",
        "description": "Read-only; return true if the action of the specified cue (not the pre-wait or post-wait) is running.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberIsActionRunningResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/isBroken": {
      "post": {
        "operationId": "cueCueNumberIsBroken",
        "description": "Read-only; return true if the specified cue is broken.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberIsBrokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/isLoaded": {
      "post": {
        "operationId": "cueCueNumberIsLoaded",
        "description": "Read-only; return true if the specified cue is loaded.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberIsLoadedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/isOverridden": {
      "post": {
        "operationId": "cueCueNumberIsOverridden",
        "description": "Read-only; return true if the specified cue’s output is currently suppressed by an override control.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberIsOverriddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/isPanicking": {
      "post": {
        "operationId": "cueCueNumberIsPanicking",
        "description": "Read-only; return true if the specified cue is panicking.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberIsPanickingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/isPaused": {
      "post": {
        "operationId": "cueCueNumberIsPaused",
        "description": "Read-only; return true if the specified cue is paused.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberIsPausedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/isRunning": {
      "post": {
        "operationId": "cueCueNumberIsRunning",
        "description": "Read-only; return true if the specified cue is running.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberIsRunningResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/isTailingOut": {
      "post": {
        "operationId": "cueCueNumberIsTailingOut",
        "description": "Read-only; return true if the specified cue has an AudioUnit which is decaying.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberIsTailingOutResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/load": {
      "post": {
        "operationId": "cueCueNumberLoad",
        "description": "Load the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLoadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/loadAt": {
      "post": {
        "operationId": "cueCueNumberLoadAt",
        "description": "If number is given, load the specified cue to number seconds. If not, this command is equivalent to load.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLoadAtResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLoadAtRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/loadActionAt": {
      "post": {
        "operationId": "cueCueNumberLoadActionAt",
        "description": "If number is given, load the specified cue to number seconds. QLab will automatically add the pre-wait of the specified cue to number in order to load the cue to the correct time. If no number is given, this command is equivalent to load.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLoadActionAtResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLoadActionAtRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/loadAndSetPlayhead": {
      "post": {
        "operationId": "cueCueNumberLoadAndSetPlayhead",
        "description": "Move the playhead to the specified cue and load that cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLoadAndSetPlayheadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/maxTimeInCueSequence": {
      "post": {
        "operationId": "cueCueNumberMaxTimeInCueSequence",
        "description": "Return the maximum time required to complete the cue sequence starting at the specified cue, as used e.g. for the “load to time” slider. Any infinite loops within the sequence are only counted once.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberMaxTimeInCueSequenceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/name": {
      "post": {
        "operationId": "cueCueNumberName",
        "description": "If string is given, set the name of the specified cue to string. If not, return the name of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberNameResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberNameRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/notes": {
      "post": {
        "operationId": "cueCueNumberNotes",
        "description": "If string is given, set the notes of the specified cue to string. If not, return the notes of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberNotesResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberNotesRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/number": {
      "post": {
        "operationId": "cueCueNumberNumber",
        "description": "If string is given, set the cue number of the specified cue to string. If not, return the cue number of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberNumberResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberNumberRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/panic": {
      "post": {
        "operationId": "cueCueNumberPanic",
        "description": "Panic the specified cue. Panicked cues fade out and stop over the panic duration specified in the General section of Workspace Settings.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPanicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/panicInTime": {
      "post": {
        "operationId": "cueCueNumberPanicInTime",
        "description": "Panic the specified cue, using number for the panic duration instead of the panic duration specified in Workspace Settings.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPanicInTimeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberPanicInTimeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/pause": {
      "post": {
        "operationId": "cueCueNumberPause",
        "description": "Pause the specified cue, allowing any AudioUnit effects on the cue to decay naturally. If the specified cue is not playing, this command has no effect.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPauseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/hardPause": {
      "post": {
        "operationId": "cueCueNumberHardPause",
        "description": "Pause the specified cue without allowing AudioUnit effects to decay naturally. If the specified cue is not playing, this command has no effect.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberHardPauseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/togglePause": {
      "post": {
        "operationId": "cueCueNumberTogglePause",
        "description": "Toggle the paused state of the specified cue. That is, if the cue is playing, this command will pause it. If the cue is paused, this command will resume it. If the specified cue is not playing, this command has no effect.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTogglePauseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/parent": {
      "post": {
        "operationId": "cueCueNumberParent",
        "description": "Read-only; return the cue ID of the parent of the specified cue. If the specified cue is inside a Group, then the Group is the parent. Otherwise, the cue list or cue cart that contains the cue is the parent.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberParentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/preview": {
      "post": {
        "operationId": "cueCueNumberPreview",
        "description": "Preview the specified cue. Previewing a cue starts it, skipping over its pre-wait time, and does not advance the playhead. Also, if the cue has an auto-follow or auto-continue, the followed or continued cue is not triggered.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPreviewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/preWait": {
      "post": {
        "operationId": "cueCueNumberPreWait",
        "description": "If number is given, set the pre-wait of the specified cue to number. If not, return the pre-wait of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPreWaitResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberPreWaitRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/preWaitElapsed": {
      "post": {
        "operationId": "cueCueNumberPreWaitElapsed",
        "description": "Return the elapsed pre-wait time (in seconds) of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPreWaitElapsedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/percentPreWaitElapsed": {
      "post": {
        "operationId": "cueCueNumberPercentPreWaitElapsed",
        "description": "Return the elapsed pre-wait time (as a percentage of the total pre-wait time) of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPercentPreWaitElapsedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/postWait": {
      "post": {
        "operationId": "cueCueNumberPostWait",
        "description": "If number is given, set the post-wait of the specified cue to number. If not, return the post-wait of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPostWaitResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberPostWaitRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/postWaitElapsed": {
      "post": {
        "operationId": "cueCueNumberPostWaitElapsed",
        "description": "Return the elapsed post-wait time (in seconds) of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPostWaitElapsedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/percentPostWaitElapsed": {
      "post": {
        "operationId": "cueCueNumberPercentPostWaitElapsed",
        "description": "Return the elapsed post-wait time (as a percentage of the total post-wait time) of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPercentPostWaitElapsedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/resume": {
      "post": {
        "operationId": "cueCueNumberResume",
        "description": "Resume the specified cue. If the specified cue is not paused, this command has no effect.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberResumeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/reset": {
      "post": {
        "operationId": "cueCueNumberReset",
        "description": "Reset the specified cue. Resetting a cue returns any temporary changes (such as those caused by a “live” OSC method) to be reverted.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberResetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/secondTriggerAction": {
      "post": {
        "operationId": "cueCueNumberSecondTriggerAction",
        "description": "If number is given, set the second trigger action of the specified cue to number. If not, return the second trigger action of the specified cue. Valid actions are: 0 - does nothing\n1 - panics\n2 - stops\n3 - hard stops\n4 - hard stops & restarts",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSecondTriggerActionResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSecondTriggerActionRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/secondTriggerOnRelease": {
      "post": {
        "operationId": "cueCueNumberSecondTriggerOnRelease",
        "description": "Get or set the state of the Second trigger on release checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the Second trigger on release checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSecondTriggerOnReleaseResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSecondTriggerOnReleaseRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/soloCueInTime": {
      "post": {
        "operationId": "cueCueNumberSoloCueInTime",
        "description": "Fade and stop all other cues in the same cue list as the specified cue over number seconds. number is required, and can be any positive whole or decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSoloCueInTimeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSoloCueInTimeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/start": {
      "post": {
        "operationId": "cueCueNumberStart",
        "description": "Start the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberStartResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/startAndAutoloadNext": {
      "post": {
        "operationId": "cueCueNumberStartAndAutoloadNext",
        "description": "Start the specified cue and load the following cue or cue sequence if that cue or cue sequence is set to auto-load.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberStartAndAutoloadNextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/stop": {
      "post": {
        "operationId": "cueCueNumberStop",
        "description": "Stop the specified cue. If the specified cue is not playing, this command has no effect.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberStopResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/hardStop": {
      "post": {
        "operationId": "cueCueNumberHardStop",
        "description": "HardStop the specified cue. If the specified cue is not playing, this command has no effect. HardStopped cues stop immediately; if the cue has an Audio Effect which ordinarily decays after stopping, such as a reverb, the Audio Effect is also stopped immediately.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberHardStopResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/type": {
      "post": {
        "operationId": "cueCueNumberType",
        "description": "Return the type (Audio, Video, Fade, etc.) of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTypeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/uniqueID": {
      "post": {
        "operationId": "cueCueNumberUniqueId",
        "description": "Return the uniqueID of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberUniqueIDResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/valuesForKeys": {
      "post": {
        "operationId": "cueCueNumberValuesForKeys",
        "description": "This special method can be used to request a custom collection of state about the given cue. json_string must be a JSON-formatted string representing an array of keys you wish to query. For example: /cue/2/valuesForKeys \"[\\\"opacity\\\",\\\"surfaceSize\\\"]\" would return the values of opacity and surfaceSize of cue 2, assuming cue 2 is a Video cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberValuesForKeysResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberValuesForKeysRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/valuesForKeysWithArguments": {
      "post": {
        "operationId": "cueCueNumberValuesForKeysWithArguments",
        "description": "This special method can be used to request a custom collection of state about the given cue. json_string must be a JSON-formatted string representing a dictionary of keys and arguments you wish to query. For example: /cue/2/valuesForKeysWithArguments \"{\\\"level\\\":[0,0]}\" would return a dictionary that contains the value of the master volume level of cue 2, assuming cue 2 has audio levels. Note that this method is limited to returning one value per key, even if you send multiple keys with different arguments.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberValuesForKeysWithArgumentsResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberValuesForKeysWithArgumentsRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/cartColumns": {
      "post": {
        "operationId": "cueCueNumberCartColumns",
        "description": "Read-only; if the specified cue is a cart, these messages return the number of rows or columns in the cart.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCartColumnsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/children": {
      "post": {
        "operationId": "cueCueNumberChildren",
        "description": "Read-only; return a list of the cues contained within the specified Group, list, or cart. Returns the same data as the workspace /cueLists method.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberChildrenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/mode": {
      "post": {
        "operationId": "cueCueNumberMode",
        "description": "If number is given, set the fade mode of the specified cue. Mode 0 is absolute fade, mode 1 is relative fade. If number is not given, return the fade mode of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberModeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberModeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/moveCartCue/{child}": {
      "post": {
        "operationId": "cueCueNumberMoveCartCueChild",
        "description": "If the specified cue is a cart, then move child cue child to position row, column within the cart. child can be the cue number or cue ID of the child cue. row and column must be valid for the specified cart cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "child",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberMoveCartCueChildResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberMoveCartCueChildRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/playhead": {
      "post": {
        "operationId": "cueCueNumberPlayhead",
        "description": "If the specified cue is a cue list, set the playhead (playback position) to cue string. If string is not specified, return the cue number of the standing-by cue, or “none” if there is no cue standing by.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPlayheadResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberPlayheadRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/playheadId": {
      "post": {
        "operationId": "cueCueNumberPlayheadId",
        "description": "If the specified cue is a cue list, set the playhead (playback position) to the cue ID string. If string is none, unset the playhead. If string is not specified, return the cue ID of the standing-by cue, or “none” if there is no cue standing by.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPlayheadIdResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberPlayheadIdRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/playhead/next": {
      "post": {
        "operationId": "cueCueNumberPlayheadNext",
        "description": "If the specified cue is a cue list, move the playhead (playback position) to the next cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPlayheadNextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/playhead/previous": {
      "post": {
        "operationId": "cueCueNumberPlayheadPrevious",
        "description": "If the specified cue is a cue list, move the playhead (playback position) to the previous cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPlayheadPreviousResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/doFade": {
      "post": {
        "operationId": "cueCueNumberDoFade",
        "description": "Get or set the state of the MIDI fade checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the MIDI fade checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDoFadeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberDoFadeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/doPitchShift": {
      "post": {
        "operationId": "cueCueNumberDoPitchShift",
        "description": "Get or set the state of the pitch shift checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the pitch shift checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDoPitchShiftResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberDoPitchShiftRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/endTime": {
      "post": {
        "operationId": "cueCueNumberEndTime",
        "description": "If number is given, set the end time of the specified cue to number seconds. If not, return the end time of the specified cue. number can be any whole or decimal number greater than or equal to zero.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberEndTimeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberEndTimeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/gang": {
      "post": {
        "operationId": "cueCueNumberGang",
        "description": "If gang is given, set the gang of crosspoint (inChannel, outChannel) of the specified cue to gang. If not, return the gang of crosspoint (inChannel, outChannel) of the specified cue. inChannel must be a whole number between 0 and 24; outChannel must be a whole number between 0 and 64. 0 is the master column or row. decibel, if given, must be a whole number, decimal number, or a string. If decibel is sent as a string (e.g. “-inf”) QLab will use the minimum decibel value set in workspace settings.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberGangResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberGangRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/infiniteLoop": {
      "post": {
        "operationId": "cueCueNumberInfiniteLoop",
        "description": "Get or set the infinite loop state of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the infinite loop state of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberInfiniteLoopResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberInfiniteLoopRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/level": {
      "post": {
        "operationId": "cueCueNumberLevel",
        "description": "If decibel is given, set the level of crosspoint (inChannel, outChannel) of the specified cue to decibel. If not, return the level of crosspoint (inChannel, outChannel) of the specified cue. inChannel must be a whole number between 0 and 24; outChannel must be a whole number between 0 and 64. 0 is the master column or row. decibel, if given, must be a whole number, decimal number, or a string. If decibel is sent as a string (e.g. “-inf”) QLab will use the minimum decibel value set in workspace settings.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLevelResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLevelRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/levels": {
      "post": {
        "operationId": "cueCueNumberLevels",
        "description": "Read-only; return all the audio levels currently available in the specified cue’s inspector. The levels are returned as an array of arrays, like so: [row0Array, row1Array, row2Array, ...] Row 0 of /levels is equivalent to the results of the /sliderLevels method.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLevelsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/liveAverageLevel/{outputChannel}": {
      "post": {
        "operationId": "cueCueNumberLiveAverageLevelOutputChannel",
        "description": "Read-only; return the RMS level of outputChannel. low and high are optional values to re-scale the output of this method. For example, sending the message /cue/1/liveAverageLevel/1 0 100 will return a 0 if the level of output 1 is silent, and 100 if the level of output 1 is as loud as is possible.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "outputChannel",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLiveAverageLevelOutputChannelResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLiveAverageLevelOutputChannelRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/lockFadeToCue": {
      "post": {
        "operationId": "cueCueNumberLockFadeToCue",
        "description": "Get or set the state of the Lock fade to start/end checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the Lock fade to start/end checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLockFadeToCueResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLockFadeToCueRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/numChannelsIn": {
      "post": {
        "operationId": "cueCueNumberNumChannelsIn",
        "description": "Read-only; return the number of input channels in the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberNumChannelsInResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/patch": {
      "post": {
        "operationId": "cueCueNumberPatch",
        "description": "If number is given, set the patch of the specified cue. If not, return the patch of the specified cue. number must be a whole number from 1 to 8.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPatchResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberPatchRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/patchList": {
      "post": {
        "operationId": "cueCueNumberPatchList",
        "description": "Read-only; return a list of audio patches defined for this workspace: [\n    {\n        \"patchNumber\": integer,\n        \"patchName\": string\n    }\n]",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPatchListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/playCount": {
      "post": {
        "operationId": "cueCueNumberPlayCount",
        "description": "If number is given, set the play count (number of times to loop) of the specified cue to number. If not, return the play count of the specified cue. number can be any whole number greater than zero.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPlayCountResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberPlayCountRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/rate": {
      "post": {
        "operationId": "cueCueNumberRate",
        "description": "If number is given, set the rate of the specified cue. If not, return the rate of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberRateResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberRateRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/setDefaultLevels": {
      "post": {
        "operationId": "cueCueNumberSetDefaultLevels",
        "description": "Set the audio levels of the specified cue to the workspace default levels.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSetDefaultLevelsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/setSilentLevels": {
      "post": {
        "operationId": "cueCueNumberSetSilentLevels",
        "description": "Set the audio levels of the specified cue to silent.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSetSilentLevelsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/sliceMarkers": {
      "post": {
        "operationId": "cueCueNumberSliceMarkers",
        "description": "Read-only; return a JSON dictionary (or array of dictionaries) listing the marker time and play count of all slices of the specified cue: {\n    \"time\": number,\n    \"playCount\": number\n} Note: slices end with slice markers. Therefore, time corresponds to the end time of the slice whose playCount is being reported. ",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSliceMarkersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/sliceMarker": {
      "post": {
        "operationId": "cueCueNumberSliceMarker",
        "description": "Set the marker time and play count of slice index of the specified cue. time can be any positive whole or decimal number. play_count can be any positive whole number, or -1 to set the slice to infinite loop.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSliceMarkerResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSliceMarkerRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/sliceMarker/{index}/time": {
      "post": {
        "operationId": "cueCueNumberSliceMarkerIndexTime",
        "description": "Set the marker time of slice index of the specified cue. time can be any positive whole or decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "index",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSliceMarkerIndexTimeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSliceMarkerIndexTimeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/sliceMarker/{index}/playCount": {
      "post": {
        "operationId": "cueCueNumberSliceMarkerIndexPlayCount",
        "description": "Set the play count of slice index of the specified cue. play_count can be any positive whole number, or -1 to set the slice to infinite loop.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "index",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSliceMarkerIndexPlayCountResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSliceMarkerIndexPlayCountRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/addSliceMarker": {
      "post": {
        "operationId": "cueCueNumberAddSliceMarker",
        "description": "Add a slice marker to the specified cue. If time is given, add the marker at that time. If not, add the marker at the current time of the cue. time can be any positive whole or decimal number. If play_count is given, set the play count of the new slice (the slice preceding the new marker) to play_count. If not, set the play count to 1. play_count can be any positive whole number, or -1 to set the slice to infinite loop. Slice markers are zero-indexed, meaning the first marker of a cue is marker 0.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberAddSliceMarkerResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberAddSliceMarkerRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/deleteSliceMarker": {
      "post": {
        "operationId": "cueCueNumberDeleteSliceMarker",
        "description": "Delete slice marker index of the specified cue. index can be zero or any positive whole number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDeleteSliceMarkerResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberDeleteSliceMarkerRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/deleteSliceMarkers": {
      "post": {
        "operationId": "cueCueNumberDeleteSliceMarkers",
        "description": "Delete all slice markers of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDeleteSliceMarkersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/sliceMarker/{index}/time/+": {
      "post": {
        "operationId": "cueCueNumberSliceMarkerIndexTimePlus",
        "description": "Add or subtract delta to/from the marker time of slice index in the specified cue. delta can be any positive whole or decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "index",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSliceMarkerIndexTimePlusResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSliceMarkerIndexTimePlusRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/sliceMarkers/time/+": {
      "post": {
        "operationId": "cueCueNumberSliceMarkersTimePlus",
        "description": "Add or subtract delta to/from the marker time of all slices in the specified cue. delta can be any positive whole or decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSliceMarkersTimePlusResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSliceMarkersTimePlusRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/sliceMarker/{index}/playCount/+": {
      "post": {
        "operationId": "cueCueNumberSliceMarkerIndexPlayCountPlus",
        "description": "Add or subtract delta to/from the play count of slice index in the specified cue. delta can be any positive whole number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "index",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSliceMarkerIndexPlayCountPlusResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSliceMarkerIndexPlayCountPlusRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/lastSlicePlayCount": {
      "post": {
        "operationId": "cueCueNumberLastSlicePlayCount",
        "description": "If play_count is given, set the play count of the last slice of the specified cue to play_count. Otherwise, return the play count of the last slice of the specified cue. play_count can be any positive whole number, or -1 to set the slice to infinite loop.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLastSlicePlayCountResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLastSlicePlayCountRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/lastSliceInfiniteLoop": {
      "post": {
        "operationId": "cueCueNumberLastSliceInfiniteLoop",
        "description": "If number is given, and is any positive whole number, set the last slice of the specified cue to loop infinitely. If number is 0, then set the last slice of the specified cue to not loop. If number is not given, return the infinite loop state of the last slice of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLastSliceInfiniteLoopResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLastSliceInfiniteLoopRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/sliderLevel": {
      "post": {
        "operationId": "cueCueNumberSliderLevel",
        "description": "Get or set a single output slider volume level. channel is either an integer from 0 to 64, or a string (the cue output name). 0 is the cue master slider. decibel is an optional whole or decimal number. When present it is the decibel value to set. If decibel is sent as a string (e.g. “-inf”) QLab will use the minimum decibel value set in workspace settings. If no decibel is given, return the volume level of the specified output slider.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSliderLevelResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSliderLevelRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/sliderLevels": {
      "post": {
        "operationId": "cueCueNumberSliderLevels",
        "description": "Read-only; return an array of the output levels of the specified cue, including the cue master. The array is therefore 65 numbers.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSliderLevelsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/startTime": {
      "post": {
        "operationId": "cueCueNumberStartTime",
        "description": "If number is given, set the start time of the specified cue to number seconds. If not, return the start time of the specified cue. number can be any whole or decimal number greater than or equal to zero.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberStartTimeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberStartTimeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/channelOffset": {
      "post": {
        "operationId": "cueCueNumberChannelOffset",
        "description": "Read-only; return the input channel offset of the specified cue, as set in the Audio Levels tab of the inspector.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberChannelOffsetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/channels": {
      "post": {
        "operationId": "cueCueNumberChannels",
        "description": "If number is given, set the number of input channels used by the specified cue. If not, return the number of input channels used by the specified cue. number can be any positive whole number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberChannelsResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberChannelsRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/cueSize": {
      "post": {
        "operationId": "cueCueNumberCueSize",
        "description": "Read-only; return the natural size of the cue’s video frame: {\n    \"width\": number,\n    \"height\": number\n}",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCueSizeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/doEffect": {
      "post": {
        "operationId": "cueCueNumberDoEffect",
        "description": "Get or set the state of the Apply effects checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the Apply effects checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDoEffectResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberDoEffectRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/effectIndex": {
      "post": {
        "operationId": "cueCueNumberEffectIndex",
        "description": "If number is given, set the video effect used for the specified cue. If not, return the index number of the video effect used for the specified cue. number can be any of the following: 1  - Color Controls\n2  - Exposure\n3  - Gamma\n4  - Sepia Monochrome\n5  - Min Max Invert\n6  - White point\n7  - Box / Disc / Gaussian Blurs\n8  - Motion Blur\n9  - Sharpen Luminance\n10 - Unsharp Mask\n11 - Zoom Blur\n12 - Pixellation\n13 - Screen\n14 - Bloom and Gloom\n15 - CMYK Halftone\n16 - Color Posterize\n17 - Crystallize and Pointillize\n18 - Edge Work\n19 - Kaleidoscope\n20 - Median and Comic Effect\n21 - Noise Reduction\n22 - Circle Splash / Hole Distortion\n23 - Pinch / Bump Distortion\n24 - Torus / Lens Distortion\n25 - Twirl / Circular Wrap / Vortex\n26 - Glass Lozenge\n27 - Op Tile\n28 - Perspective Tile\n29 - Quad Tiles\n30 - Reflected Tiles\n31 - Rotated Tiles\n32 - Titles Note: /effectIndex replaces /effect which worked in earlier versions of QLab 4, but which was removed for boring technical reasons.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberEffectIndexResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberEffectIndexRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/effectSet": {
      "post": {
        "operationId": "cueCueNumberEffectSet",
        "description": "If value is given, set the specified video effect’s parameter to value. If not, return the value of the specified parameter. parameter must be a string, and must match the name of a parameter of the video effect currently in use for the specified cue. For example, if the specified cue is using the “Color Controls” video effect, then parameter could be “Brightness”, “Contrast”, “Hue Angle”, or “Saturation”. “Live” methods are the same as their non-live counterparts, but operate on the active, “live” value of a running cue, rather than changing the “start state” of the cue. Invoking these methods does not cause the document to have unsaved changes.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberEffectSetResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberEffectSetRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/fullScreen": {
      "post": {
        "operationId": "cueCueNumberFullScreen",
        "description": "Get or set the full-surface state of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the full-surface state of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberFullScreenResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberFullScreenRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/holdLastFrame": {
      "post": {
        "operationId": "cueCueNumberHoldLastFrame",
        "description": "Get or set the state of the hold last frame checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the hold last frame specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberHoldLastFrameResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberHoldLastFrameRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/layer": {
      "post": {
        "operationId": "cueCueNumberLayer",
        "description": "If number is given, set the layer of the specified cue to number. If not, return the layer of the specified cue. number can be any positive whole number from 0 to 1000. Layer 0 is the “bottom” layer and layer 1000 is the “top” layer. A number between 0 and 1000, inclusive.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLayerResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLayerRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/opacity": {
      "post": {
        "operationId": "cueCueNumberOpacity",
        "description": "If number is given, set the opacity of the specified cue to number. If not, return the opacity of the specified cue. number can be any decimal number between 0 and 1.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberOpacityResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberOpacityRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/originX": {
      "post": {
        "operationId": "cueCueNumberOriginX",
        "description": "If number is given, set the X-axis anchor point of the specified cue to number. If not, return the X-axis anchor point of the specified cue. number can be any decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberOriginXResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberOriginXRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/originY": {
      "post": {
        "operationId": "cueCueNumberOriginY",
        "description": "If number is given, set the Y-axis anchor point of the specified cue to number. If not, return the Y-axis anchor point of the specified cue. number can be any decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberOriginYResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberOriginYRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/origin": {
      "post": {
        "operationId": "cueCueNumberOrigin",
        "description": "Set the anchor point of the specified cue to (x,y). x and y can be any decimal numbers.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberOriginResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberOriginRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/preserveAspectRatio": {
      "post": {
        "operationId": "cueCueNumberPreserveAspectRatio",
        "description": "Get or set the state of the Preserve aspect ratio checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the Preserve aspect ratio checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPreserveAspectRatioResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberPreserveAspectRatioRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/quaternion": {
      "post": {
        "operationId": "cueCueNumberQuaternion",
        "description": "If four numbers are given, set the rotation of the specified cue. If not, return an array of four numbers representing the cue’s rotation as a quaternion. number can be any decimal number. Caution: you need to understand quaternion math to make any meaningful use of this method. Quaternion math is really hard. Good luck!",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberQuaternionResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberQuaternionRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/liveRate": {
      "post": {
        "operationId": "cueCueNumberLiveRate",
        "description": "If number is given, set the rate of the specified cue to number. If not, return the rate of the specified cue. number can be any positive whole or decimal number from 0.03 to 33.0. “Live” methods are the same as their non-live counterparts, but operate on the active, “live” value of a running cue, rather than changing the “start state” of the cue. Invoking these methods does not cause the document to have unsaved changes.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLiveRateResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLiveRateRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/resetRotation": {
      "post": {
        "operationId": "cueCueNumberResetRotation",
        "description": "Reset the rotation of the specified cue. If the specified cue is using single-axis rotation, this has no visible effect; use /rotation instead.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberResetRotationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/rotateX": {
      "post": {
        "operationId": "cueCueNumberRotateX",
        "description": "If the specified cue is using 3D orientation, add number to the current quaternion rotation of the specified cue. number can be any decimal number. If the specified cue is using single-axis rotation, this method has no effect; use /rotation instead.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberRotateXResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberRotateXRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/liveRotation/Xaxis": {
      "post": {
        "operationId": "cueCueNumberLiveRotationXaxis",
        "description": "Rotate the specified cue by number degrees in the X, Y, or Z axis. These are equivalent to using a Fade cue in single-axis mode to rotate the specified cue. These “live” methods have no non-live counterparts. They operate on the active, “live” value of a running cue. Invoking these methods does not cause the document to have unsaved changes.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLiveRotationXaxisResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLiveRotationXaxisRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/scaleX": {
      "post": {
        "operationId": "cueCueNumberScaleX",
        "description": "If number is given, set the X-axis scale of the specified cue to number. If not, return the X-axis scale of the specified cue. number can be any decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberScaleXResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberScaleXRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/scaleY": {
      "post": {
        "operationId": "cueCueNumberScaleY",
        "description": "If number is given, set the Y-axis scale of the specified cue to number. If not, return the Y-axis scale of the specified cue. number can be any decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberScaleYResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberScaleYRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/scale": {
      "post": {
        "operationId": "cueCueNumberScale",
        "description": "If x and y are given, set the scale of the specified cue to (x,y). If not, return the current scale of the specified cue. x and y can be any decimal numbers.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberScaleResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberScaleRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/surfaceID": {
      "post": {
        "operationId": "cueCueNumberSurfaceId",
        "description": "If number is given, set the surface of the specified cue. If not, return the surface ID of the surface of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSurfaceIDResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSurfaceIDRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/surfaceList": {
      "post": {
        "operationId": "cueCueNumberSurfaceList",
        "description": "Read-only; return a list of surfaces defined for this workspace: [\n    {\n        \"surfaceName\": string,\n        \"surfaceID\": number\n    }\n]",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSurfaceListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/surfaceName": {
      "post": {
        "operationId": "cueCueNumberSurfaceName",
        "description": "If string is given, assign the specific cue to surface string. If not, return the name of the surface to which the specified cue is assigned. string must be the name of a surface in this workspace.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSurfaceNameResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSurfaceNameRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/surfaceSize": {
      "post": {
        "operationId": "cueCueNumberSurfaceSize",
        "description": "Read-only; returns the size of the cue’s display surface: {\n    \"width\": number,\n    \"height\": number\n}",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSurfaceSizeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/translationX": {
      "post": {
        "operationId": "cueCueNumberTranslationX",
        "description": "If number is given, set the X-axis translation of the specified cue to number. If not, return the X-axis translation of the specified cue. number can be any decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTranslationXResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTranslationXRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/translationY": {
      "post": {
        "operationId": "cueCueNumberTranslationY",
        "description": "If number is given, set the Y-axis translation of the specified cue to number. If not, return the Y-axis translation of the specified cue. number can be any decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTranslationYResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTranslationYRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/translation": {
      "post": {
        "operationId": "cueCueNumberTranslation",
        "description": "If x and y are given, set the translation of the specified cue to (x,y). If not, return the current translation of the specified cue. x and y can be any decimal numbers.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTranslationResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTranslationRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/cameraPatch": {
      "post": {
        "operationId": "cueCueNumberCameraPatch",
        "description": "If number is given, set the camera patch of the specified cue. If not, return the camera patch of the specified cue. number must be a whole number from 1 to 8.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCameraPatchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/fixedWidth": {
      "post": {
        "operationId": "cueCueNumberFixedWidth",
        "description": "If number is given, and is greater than 0, set the fixed width of the specified cue to number. If number equals 0, set the width of the specified cue to automatic. If no number is given, return the width of the specified cue. number can be any positive whole or decimal number.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberFixedWidthResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberFixedWidthRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text": {
      "post": {
        "operationId": "cueCueNumberText",
        "description": "If string is given, set the text of the specified cue to string. If not, return the text of the specified cue. When setting text, the formatting will match the first character of the existing text. “Live” methods are the same as their non-live counterparts, but operate on the active, “live” value of a running cue, rather than changing the “start state” of the cue. Invoking these methods does not cause the document to have unsaved changes.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTextRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/format": {
      "post": {
        "operationId": "cueCueNumberTextFormat",
        "description": "If json_string is given, this command can be used to set the formatting of one or more substrings of the specified cue. For example: [\n  {\n    \"fontFamily\": string,\n    \"fontStyle\": string,\n    \"fontName\": string,\n    \"fontSize\": number,\n    \"lineSpacing\": number,\n    \"color\": array of numbers representing RGBA percentage values,\n    \"range\": optional array of numbers/percent strings representing a substring at [index, length]\n  },\n  { ... },\n  { ... }\n] If json_string is not given, return an array of JSON dictionaries describing each substring in the text of the specified cue. A substring, in this case, is defined as a subset of the text with uniform format attributes. If the entire text string is uniformly formatted, the array will have only one dictionary.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextFormatResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTextFormatRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/format/alignment": {
      "post": {
        "operationId": "cueCueNumberTextFormatAlignment",
        "description": "If alignment is given, set the text alignment of the specified cue to alignment. If not, return the alignment of the specified cue. alignment may be left, center, right, or justify.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextFormatAlignmentResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTextFormatAlignmentRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/format/fontFamily": {
      "post": {
        "operationId": "cueCueNumberTextFormatFontFamily",
        "description": "Read-only; return the font family name (“Helvetica”, “Courier New”, etc.) used in the specified cue. You may optionally send this command in the form: /cue/{cue_number}/text/format/fontFamily/{index}/{length}, in which index is a whole number or a percentage string (e.g. 53%) which lets you specify the start of a substring, and length is a number or percentage string which specifies the length of that substring. The first character is index 0. For example: /cue/1/text/format/fontFamily/4/12 will return the font family name used for characters 5 through 17 of cue 1. You may set length to -1 to specify “to end the of the string.” You may also optionally send this command in the form: /cue/{cue_number}/text/format/fontFamily/word/{word_index}, in which word_index is a whole number which specifies a single word within the text of the cue. The first word is word 0.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextFormatFontFamilyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/format/fontStyle": {
      "post": {
        "operationId": "cueCueNumberTextFormatFontStyle",
        "description": "Read-only; return the style (“Bold Oblique”, “Regular”, etc.) used in the specified cue. This command may also use the optional /{index}/{length} and /word/{word_index} forms as described above in the entry for /cue/{cue_number}/text/format/fontFamily.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextFormatFontStyleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/format/fontFamilyAndStyle": {
      "post": {
        "operationId": "cueCueNumberTextFormatFontFamilyAndStyle",
        "description": "If family and style are given, set the font family and style of the text of the specified cue to family and style. Otherwise, return the font family and style for the specified cue. Individual commands for font family and style are not available because the combination of both values is required to reliably describe an individual font. This command may also use the optional /{index}/{length} and /word/{word_index} forms as described above in the entry for /cue/{cue_number}/text/format/fontFamily.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextFormatFontFamilyAndStyleResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTextFormatFontFamilyAndStyleRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/format/fontName": {
      "post": {
        "operationId": "cueCueNumberTextFormatFontName",
        "description": "If name is given, set the font of the text of the specified cue. If not, return the name of the font used for the specified cue. This command may also use the optional /{index}/{length} and /word/{word_index} forms as described above in the entry for /cue/{cue_number}/text/format/fontFamily.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextFormatFontNameResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTextFormatFontNameRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/format/fontSize": {
      "post": {
        "operationId": "cueCueNumberTextFormatFontSize",
        "description": "If number is specified, set the font size of the text of the specified cue to number. If not, return the font size of the text of the specified cue. This command may use increment and decrement syntax as described above. This command may also use the optional /{index}/{length} and /word/{word_index} forms as described above in the entry for /cue/{cue_number}/text/format/fontFamily.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextFormatFontSizeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTextFormatFontSizeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/format/lineSpacing": {
      "post": {
        "operationId": "cueCueNumberTextFormatLineSpacing",
        "description": "If number is specified, set the line spacing of the text of the specified cue to number. If not, return the line spacing of the text of the specified cue. This command may use increment and decrement syntax as described above. This command may also use the optional /{index}/{length} and /word/{word_index} forms as described above in the entry for /cue/{cue_number}/text/format/fontFamily, although it only works if you index the first word or character in a line. It’s also important to remember that the invisible “return” character at the end of a line (created by pressing the “return” key) counts as a character.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextFormatLineSpacingResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTextFormatLineSpacingRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/format/color": {
      "post": {
        "operationId": "cueCueNumberTextFormatColor",
        "description": "If red, green, blue, and alpha are specified, set the given color attribute of the specified cue to the corresponding color. If not, return the color for the given attribute of the specified cue. red, green, blue, and alpha can be decimal numbers between 0.0 and 1.0, where 1.0 is the maximum level. Thus, 1 0 0 1 is primary red, and 1 1 1 0.5 is white at 50% transparency. This command may also use the optional /{index}/{length} and /word/{word_index} forms as described above in the entry for /cue/{cue_number}/text/format/fontFamily.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextFormatColorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTextFormatColorRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/format/strikethroughStyle": {
      "post": {
        "operationId": "cueCueNumberTextFormatStrikethroughStyle",
        "description": "If style is given, set the strikethrough or underline style of the text of the specified cue to style. Otherwise, return the strikethrough or underline style for the specified cue.  style may be none, single, or double. This command may also use the optional /{index}/{length} and /word/{word_index} forms as described above in the entry for /cue/{cue_number}/text/format/fontFamily.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextFormatStrikethroughStyleResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTextFormatStrikethroughStyleRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/text/outputSize": {
      "post": {
        "operationId": "cueCueNumberTextOutputSize",
        "description": "Read-only; return a two-item array containing the width and height of the text or liveText of the specified cue. “Live” methods are the same as their non-live counterparts, but operate on the active, “live” value of a running cue, rather than changing the “start state” of the cue. Invoking these methods does not cause the document to have unsaved changes.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTextOutputSizeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/alwaysCollate": {
      "post": {
        "operationId": "cueCueNumberAlwaysCollate",
        "description": "Get or set the state of the Always collate checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the Always collate specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberAlwaysCollateResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberAlwaysCollateRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/collateAndStart": {
      "post": {
        "operationId": "cueCueNumberCollateAndStart",
        "description": "Collate and start the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCollateAndStartResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/lightCommandText": {
      "post": {
        "operationId": "cueCueNumberLightCommandText",
        "description": "If string is given, set the full command text of the specified cue to string. If not, return the full command text of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberLightCommandTextResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberLightCommandTextRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/prune": {
      "post": {
        "operationId": "cueCueNumberPrune",
        "description": "Prune the command text of the specified cue. Pruning removes any commands which have no effect. These two commands are equivalent.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberPruneResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/removeLightCommandsMatching": {
      "post": {
        "operationId": "cueCueNumberRemoveLightCommandsMatching",
        "description": "If the specified cue contains a command that matches string, remove that command. Otherwise, do nothing.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberRemoveLightCommandsMatchingResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberRemoveLightCommandsMatchingRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/replaceLightCommand": {
      "post": {
        "operationId": "cueCueNumberReplaceLightCommand",
        "description": "If the specified cue contains a light command matching old_command, replace that command with new_command. Both old_command and new_command must be strings which are valid light commands. This method replaces /updateLightCommand starting in QLab 4.4.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberReplaceLightCommandResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberReplaceLightCommandRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/safeSort": {
      "post": {
        "operationId": "cueCueNumberSafeSort",
        "description": "Lexically (alphabetically) sort the command text of the specified cue, as long as sorting doesn’t change the cue’s output. These two commands are equivalent.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSafeSortResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/setLight": {
      "post": {
        "operationId": "cueCueNumberSetLight",
        "description": "Add a command to the specified cue in the form string = setting. string can be the name of an instrument or group, with or without a parameter. setting must be an acceptable value for the specified parameter of the specified instrument or group.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSetLightResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberSetLightRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/updateLightCommand": {
      "post": {
        "operationId": "cueCueNumberUpdateLightCommand",
        "description": "If the specified cue contains a command for the instrument or group string, then update that command to the specified value number. If the specified cue does not contain a command for the instrument or group string, then add a command in the form string = number. string can be the name of an instrument or group, with or without a parameter. number must be an acceptable value for the specified instrument or group. This method is deprecated starting in QLab 4.4, and is replaced by /replaceLightCommand.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberUpdateLightCommandResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberUpdateLightCommandRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/doOpacity": {
      "post": {
        "operationId": "cueCueNumberDoOpacity",
        "description": "Get or set the state of the geometry parameter checkboxes of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the relevant geometry parameter checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDoOpacityResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberDoOpacityRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/geoMode": {
      "post": {
        "operationId": "cueCueNumberGeoMode",
        "description": "If number is given, set the geometry fade mode of the specified cue. Mode 0 is absolute fade, mode 1 is relative fade. If number is not given, return the geometry fade mode of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberGeoModeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberGeoModeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/rotation": {
      "post": {
        "operationId": "cueCueNumberRotation",
        "description": "If number is given, and if the specified cue is using single-axis rotation, set the rotation in degrees to number. If no number is given, return the current rotation of the specified cue. For 3D orientation, use /quaternion or /rotate{N}.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberRotationResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberRotationRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/rotationType": {
      "post": {
        "operationId": "cueCueNumberRotationType",
        "description": "If number is given, set the rotation type of the specified cue to number. If not, return the rotation type of the specified cue. Valid rotation types are: 0 - 3D orientation\n1 - X rotation\n2 - Y rotation\n3 - Z rotation",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberRotationTypeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberRotationTypeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/setLevelsFromTarget": {
      "post": {
        "operationId": "cueCueNumberSetLevelsFromTarget",
        "description": "Set the audio levels, trim, and gangs of the specified cue to match those of its target. If the target cue has no audio levels then this command has no effect.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSetLevelsFromTargetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/setGeometryFromTarget": {
      "post": {
        "operationId": "cueCueNumberSetGeometryFromTarget",
        "description": "Set the geometry of the specified cue to the geometry of its target cue. If the target cue has no geometry then this command has no effect.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberSetGeometryFromTargetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/stopTargetWhenDone": {
      "post": {
        "operationId": "cueCueNumberStopTargetWhenDone",
        "description": "Get or set the state of the Stop target when done checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the Stop target when done checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberStopTargetWhenDoneResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberStopTargetWhenDoneRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/willFade": {
      "post": {
        "operationId": "cueCueNumberWillFade",
        "description": "If number, row and column are all given, set the active state (i.e. yellow or grey) of crosspoint {row,column}. number is interpreted as a boolean; 0 equals false, any other number equals true. row and column must be whole numbers. If row and column are given, but not number, return the active state of crosspoint {row,column}. If no arguments are given, return all the currently active crosspoints in the specified cue. The levels are returned as an array of arrays, like so: [row0Array, row1Array, row2Array, ...]",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberWillFadeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberWillFadeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/customString": {
      "post": {
        "operationId": "cueCueNumberCustomString",
        "description": "If string is given, set the OSC message of the specified cue to string. If not, return the OSC message of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCustomStringResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberCustomStringRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/messageType": {
      "post": {
        "operationId": "cueCueNumberMessageType",
        "description": "If number is given, set the message type of the specified cue to number. If not, return the message type of the specified cue. Valid message types are: 1 - MIDI Voice Message (\"Musical MIDI\")\n2 - MIDI Show Control Message (MSC)\n3 - MIDI SysEx Message",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberMessageTypeResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberMessageTypeRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/qlabCommand": {
      "post": {
        "operationId": "cueCueNumberQlabCommand",
        "description": "If number is given, set the QLab command of the specified cue to number. If not, return the message type of the specified cue. Valid QLab commands are: 1  - start\n2  - stop\n3  - hardStop\n4  - pause\n5  - resume\n6  - togglePause\n7  - load\n8  - preview\n9  - reset\n10 - panic\n11 - number\n12 - name\n13 - notes\n14 - cueTargetNumber\n15 - preWait\n16 - duration\n17 - postWait\n18 - continueMode\n19 - flagged\n20 - armed\n21 - colorName",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberQlabCommandResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberQlabCommandRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/qlabCueNumber": {
      "post": {
        "operationId": "cueCueNumberQlabCueNumber",
        "description": "If string is given, set the target cue number for the command of the specified cue to string. If not, return the target cue number of the command of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberQlabCueNumberResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberQlabCueNumberRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/qlabCueParameters": {
      "post": {
        "operationId": "cueCueNumberQlabCueParameters",
        "description": "If string is given, set the parameters for the command of the specified cue to string. If not, return the parameters of the command of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberQlabCueParametersResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberQlabCueParametersRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/rawString": {
      "post": {
        "operationId": "cueCueNumberRawString",
        "description": "If string is given, set the MIDI SysEx of the specified cue to string. If not, return the MIDI SysEx string of the specified cue. string must be a valid SysEx string, formatted in hexadecimal, and omitting the starting F0 and ending F7.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberRawStringResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberRawStringRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/byte1": {
      "post": {
        "operationId": "cueCueNumberByte1",
        "description": "If number is given, set byte 1 of the MIDI message of the specified cue to number. If not, return byte 1 of the MIDI message of the specified cue. number must be a whole number from 0 to 127.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberByte1Response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberByte1Request"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/byte2": {
      "post": {
        "operationId": "cueCueNumberByte2",
        "description": "If number is given, set byte 2 of the MIDI message of the specified cue to number. If not, return byte 2 of the MIDI message of the specified cue. number must be a whole number from 0 to 127.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberByte2Response"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberByte2Request"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/byteCombo": {
      "post": {
        "operationId": "cueCueNumberByteCombo",
        "description": "If number is given, set both bytes of the MIDI message of the specified cue based on number. If not, return the value of bytes 1 and 2 (as a single number) of the MIDI message of the specified cue. number must be a whole number from 0 to 16383.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberByteComboResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberByteComboRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/channel": {
      "post": {
        "operationId": "cueCueNumberChannel",
        "description": "If number is given, set the MIDI channel of the specified cue to number. If not, return the MIDI channel of the specified cue. number must be a whole number from 1 to 16.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberChannelResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberChannelRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/command": {
      "post": {
        "operationId": "cueCueNumberCommand",
        "description": "If number is given, set the MSC command of the specified cue to number. If not, return the MSC command of the specified cue. number must be a whole number from 0 to 127, but only the following values are meaningful: 1  - GO\n2  - STOP\n3  - RESUME\n4  - TIMED_GO\n5  - LOAD\n6  - SET\n7  - FIRE\n8  - ALL_OFF\n9  - RESTORE\n10 - RESET\n11 - GO_OFF\n16 - GO/JAM_CLOCK\n17 - STANDBY_+\n18 - STANDBY_-\n19 - SEQUENCE_+\n20 - SEQUENCE_-\n21 - START_CLOCK\n22 - STOP_CLOCK\n23 - ZERO_CLOCK\n24 - SET_CLOCK\n25 - MTC_CHASE_ON\n26 - MTC_CHASE_OFF\n27 - OPEN_CUE_LIST\n28 - CLOSE_CUE_LIST\n29 - OPEN_CUE_PATH\n30 - CLOSE_CUE_PATH",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCommandResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberCommandRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/commandFormat": {
      "post": {
        "operationId": "cueCueNumberCommandFormat",
        "description": "If number is given, set the MSC command format of the specified cue to number. If not, return the MSC command format of the specified cue. number must be a whole number from 0 to 127, but only the following values are meaningful: 127 - All Types\n1   - Lighting (General)\n2   - Moving Lights\n3   - Color Changers\n4   - Strobes\n5   - Lasers\n6   - Chasers\n16  - Sound (General)\n17  - Music\n18  - CD Players\n19  - EPROM Playback\n20  - Audio Tape Machines\n21  - Intercoms\n22  - Amplifiers\n23  - Audio Effects Devices\n24  - Equalizers\n32  - Machinery (General)\n33  - Rigging\n34  - Flys\n35  - Lifts\n36  - Turntables\n37  - Trusses\n38  - Robots\n39  - Animation\n40  - Floats\n41  - Breakaways\n42  - Barges\n48  - Video (General)\n49  - Video Tape Machines\n50  - Video Cassette Machines\n51  - Video Disc Players\n52  - Video Switchers\n53  - Video Effects\n54  - Video Character Generators\n55  - Video Still Stores\n56  - Video Monitors\n64  - Projection (General)\n65  - Film Projectors\n66  - Slide Projectors\n67  - Video Projectors\n68  - Dissolvers\n69  - Shutter Controls\n80  - Process Control (General)\n81  - Hydraulic Oil\n82  - H2O\n83  - CO2\n84  - Compressed Air\n85  - Natural Gas\n86  - Fog\n87  - Smoke\n88  - Cracked Haze\n96  - Pyrotechnics (General)\n97  - Fireworks\n98  - Explosions\n99  - Flame\n100 - Smoke Pots",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCommandFormatResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberCommandFormatRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/controlNumber": {
      "post": {
        "operationId": "cueCueNumberControlNumber",
        "description": "If number is given, set the MSC control number of the specified cue to number. If not, return the MSC control number of the specified cue. number must be a whole number from 0 to 16383.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberControlNumberResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberControlNumberRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/controlValue": {
      "post": {
        "operationId": "cueCueNumberControlValue",
        "description": "If number is given, set the MSC control value of the specified cue to number. If not, return the MSC control value of the specified cue. number must be a whole number from 0 to 16383.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberControlValueResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberControlValueRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/deviceID": {
      "post": {
        "operationId": "cueCueNumberDeviceId",
        "description": "If number is given, set the outgoing MSC device ID of the specified cue to number. If not, return the outgoing MSC device ID of the specified cue. number must be a whole number from 0 to 127.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberDeviceIDResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberDeviceIDRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/endValue": {
      "post": {
        "operationId": "cueCueNumberEndValue",
        "description": "If number is given, set the fade ending value of the MIDI message of the specified cue to number. If not, return the fade ending value of the MIDI message of the specified cue. number must be a whole number from 0 to 127, unless the message type of the specified cue is pitch bend, in which case number must be a whole number between 0 and 16383.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberEndValueResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberEndValueRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/hours": {
      "post": {
        "operationId": "cueCueNumberHours",
        "description": "If number is given, set the appropriate section of the MSC timecode of the specified cue to number. If not, return the appropriate section of MSC timecode hours of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberHoursResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberHoursRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/macro": {
      "post": {
        "operationId": "cueCueNumberMacro",
        "description": "If number is given, set the MSC macro of the specified cue to number. If not, return the MSC macro of the specified cue. number must be a whole number from 0 to 127.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberMacroResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberMacroRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/qList": {
      "post": {
        "operationId": "cueCueNumberQList",
        "description": "If number is given, set the outgoing MSC cue list number of the specified cue to number. If not, return the outgoing MSC cue list number of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberQListResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberQListRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/qNumber": {
      "post": {
        "operationId": "cueCueNumberQNumber",
        "description": "If number is given, set the outgoing MSC cue number of the specified cue to number. If not, return the outgoing MSC cue number of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberQNumberResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberQNumberRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/qPath": {
      "post": {
        "operationId": "cueCueNumberQPath",
        "description": "If number is given, set the outgoing MSC cue path number of the specified cue to number. If not, return the outgoing MSC cue path number of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberQPathResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberQPathRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/status": {
      "post": {
        "operationId": "cueCueNumberStatus",
        "description": "If number is given, set the MIDI message type of the specified cue to number. If not, return the MIDI message type of the specified cue. Valid message types are: 0 - Note Off\n1 - Note On\n2 - Key Pressure (Aftertouch)\n3 - Control Change\n4 - Program Change\n5 - Channel Pressure Change\n6 - Pitch Bend Change",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberStatusResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberStatusRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/timecodeFormat": {
      "post": {
        "operationId": "cueCueNumberTimecodeFormat",
        "description": "If number is given, set the MSC timecode format of the specified cue to number. If not, return the MSC timecode format of the specified cue. Valid formats are: 0 - 24 fps\n1 - 25 fps\n2 - 30 fps drop\n3 - 30 fps non-drop",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTimecodeFormatResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTimecodeFormatRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/timecodeString": {
      "post": {
        "operationId": "cueCueNumberTimecodeString",
        "description": "If number is given, set the MSC timecode string of the specified cue to number. If not, return the MSC timecode string of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberTimecodeStringResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberTimecodeStringRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/startNextCueWhenSliceEnds": {
      "post": {
        "operationId": "cueCueNumberStartNextCueWhenSliceEnds",
        "description": "Get or set the state of the Start next cue when slice ends checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the Start next cue when slice ends checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberStartNextCueWhenSliceEndsResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberStartNextCueWhenSliceEndsRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/stopTargetWhenSliceEnds": {
      "post": {
        "operationId": "cueCueNumberStopTargetWhenSliceEnds",
        "description": "Get or set the state of the Stop target when slice ends checkbox of the specified cue. number is interpreted as a boolean; 0 equals false, any other number equals true. If no number is given, return the state of the Stop target when slice ends checkbox of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberStopTargetWhenSliceEndsResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CueCueNumberStopTargetWhenSliceEndsRequest"
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/compileSource": {
      "post": {
        "operationId": "cueCueNumberCompileSource",
        "description": "Compile the script of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberCompileSourceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cue/{cue_number}/scriptSource": {
      "post": {
        "operationId": "cueCueNumberScriptSource",
        "description": "Read-only; return the contents of the script of the specified cue.",
        "parameters": [
          {
            "in": "query",
            "name": "expect-response",
            "description": "If a response is expected from QLab for this command. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "path",
            "name": "cue_number",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CueCueNumberScriptSourceResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "_WorkspacesCue": {
        "type": "object",
        "properties": {
          "number": { "type": "string" },
          "uniqueID": { "type": "string" },
          "cues": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/_WorkspacesCue" }
          },
          "flagged": { "type": "boolean" },
          "listName": { "type": "string" },
          "type": {
            "type": "string",
            "enum": [
              "Group",
              "Audio",
              "Video",
              "Text",
              "Camera",
              "Mic",
              "Light",
              "Fade",
              "Network",
              "Midi"
            ]
          },
          "colorName": { "type": "boolean" },
          "name": { "type": "boolean" },
          "armed": { "type": "boolean" }
        }
      },
      "AuditionWindowRequest": {
        "$ref": "components/AuditionWindowRequest.json"
      },
      "AuditionWindowResponse": {
        "$ref": "components/AuditionWindowResponse.json"
      },
      "ToggleAuditionWindowResponse": {
        "$ref": "components/ToggleAuditionWindowResponse.json"
      },
      "FontNamesResponse": { "$ref": "components/FontNamesResponse.json" },
      "FontFamiliesAndStylesResponse": {
        "$ref": "components/FontFamiliesAndStylesResponse.json"
      },
      "LiveFadePreviewRequest": {
        "$ref": "components/LiveFadePreviewRequest.json"
      },
      "LiveFadePreviewResponse": {
        "$ref": "components/LiveFadePreviewResponse.json"
      },
      "ToggleLiveFadePreviewResponse": {
        "$ref": "components/ToggleLiveFadePreviewResponse.json"
      },
      "OverridesArtNetEnabledRequest": {
        "$ref": "components/OverridesArtNetEnabledRequest.json"
      },
      "OverridesArtNetEnabledResponse": {
        "$ref": "components/OverridesArtNetEnabledResponse.json"
      },
      "OverridesToggleArtNetResponse": {
        "$ref": "components/OverridesToggleArtNetResponse.json"
      },
      "OverridesMidiInputEnabledRequest": {
        "$ref": "components/OverridesMidiInputEnabledRequest.json"
      },
      "OverridesMidiInputEnabledResponse": {
        "$ref": "components/OverridesMidiInputEnabledResponse.json"
      },
      "OverridesToggleMidiInputResponse": {
        "$ref": "components/OverridesToggleMidiInputResponse.json"
      },
      "OverridesMidiOutputEnabledRequest": {
        "$ref": "components/OverridesMidiOutputEnabledRequest.json"
      },
      "OverridesMidiOutputEnabledResponse": {
        "$ref": "components/OverridesMidiOutputEnabledResponse.json"
      },
      "OverridesToggleMidiOutputResponse": {
        "$ref": "components/OverridesToggleMidiOutputResponse.json"
      },
      "OverridesMscInputEnabledRequest": {
        "$ref": "components/OverridesMscInputEnabledRequest.json"
      },
      "OverridesMscInputEnabledResponse": {
        "$ref": "components/OverridesMscInputEnabledResponse.json"
      },
      "OverridesToggleMscInputResponse": {
        "$ref": "components/OverridesToggleMscInputResponse.json"
      },
      "OverridesMscOutputEnabledRequest": {
        "$ref": "components/OverridesMscOutputEnabledRequest.json"
      },
      "OverridesMscOutputEnabledResponse": {
        "$ref": "components/OverridesMscOutputEnabledResponse.json"
      },
      "OverridesToggleMscOutputResponse": {
        "$ref": "components/OverridesToggleMscOutputResponse.json"
      },
      "OverridesSysexInputEnabledRequest": {
        "$ref": "components/OverridesSysexInputEnabledRequest.json"
      },
      "OverridesSysexInputEnabledResponse": {
        "$ref": "components/OverridesSysexInputEnabledResponse.json"
      },
      "OverridesToggleSysexInputResponse": {
        "$ref": "components/OverridesToggleSysexInputResponse.json"
      },
      "OverridesSysexOutputEnabledRequest": {
        "$ref": "components/OverridesSysexOutputEnabledRequest.json"
      },
      "OverridesSysexOutputEnabledResponse": {
        "$ref": "components/OverridesSysexOutputEnabledResponse.json"
      },
      "OverridesToggleSysexOutputResponse": {
        "$ref": "components/OverridesToggleSysexOutputResponse.json"
      },
      "OverridesOscInputEnabledRequest": {
        "$ref": "components/OverridesOscInputEnabledRequest.json"
      },
      "OverridesOscInputEnabledResponse": {
        "$ref": "components/OverridesOscInputEnabledResponse.json"
      },
      "OverridesToggleOscInputResponse": {
        "$ref": "components/OverridesToggleOscInputResponse.json"
      },
      "OverridesOscOutputEnabledRequest": {
        "$ref": "components/OverridesOscOutputEnabledRequest.json"
      },
      "OverridesOscOutputEnabledResponse": {
        "$ref": "components/OverridesOscOutputEnabledResponse.json"
      },
      "OverridesToggleOscOutputResponse": {
        "$ref": "components/OverridesToggleOscOutputResponse.json"
      },
      "OverridesTimecodeInputEnabledRequest": {
        "$ref": "components/OverridesTimecodeInputEnabledRequest.json"
      },
      "OverridesTimecodeInputEnabledResponse": {
        "$ref": "components/OverridesTimecodeInputEnabledResponse.json"
      },
      "OverridesToggleTimecodeInputResponse": {
        "$ref": "components/OverridesToggleTimecodeInputResponse.json"
      },
      "OverridesTimecodeOutputEnabledRequest": {
        "$ref": "components/OverridesTimecodeOutputEnabledRequest.json"
      },
      "OverridesTimecodeOutputEnabledResponse": {
        "$ref": "components/OverridesTimecodeOutputEnabledResponse.json"
      },
      "OverridesToggleTimecodeOutputResponse": {
        "$ref": "components/OverridesToggleTimecodeOutputResponse.json"
      },
      "OverrideWindowRequest": {
        "$ref": "components/OverrideWindowRequest.json"
      },
      "OverrideWindowResponse": {
        "$ref": "components/OverrideWindowResponse.json"
      },
      "ToggleOverrideWindowResponse": {
        "$ref": "components/ToggleOverrideWindowResponse.json"
      },
      "ReplyFormatRequest": { "$ref": "components/ReplyFormatRequest.json" },
      "ReplyFormatResponse": { "$ref": "components/ReplyFormatResponse.json" },
      "TimecodeWindowRequest": {
        "$ref": "components/TimecodeWindowRequest.json"
      },
      "TimecodeWindowResponse": {
        "$ref": "components/TimecodeWindowResponse.json"
      },
      "ToggleTimecodeWindowResponse": {
        "$ref": "components/ToggleTimecodeWindowResponse.json"
      },
      "VersionResponse": { "$ref": "components/VersionResponse.json" },
      "WorkingDirectoryRequest": {
        "$ref": "components/WorkingDirectoryRequest.json"
      },
      "WorkingDirectoryResponse": {
        "$ref": "components/WorkingDirectoryResponse.json"
      },
      "WorkspacesResponse": { "$ref": "components/WorkspacesResponse.json" },
      "WorkspaceIdBasePathResponse": {
        "$ref": "components/WorkspaceIdBasePathResponse.json"
      },
      "WorkspaceIdConnectRequest": {
        "$ref": "components/WorkspaceIdConnectRequest.json"
      },
      "WorkspaceIdConnectResponse": {
        "$ref": "components/WorkspaceIdConnectResponse.json"
      },
      "WorkspaceIdDisconnectResponse": {
        "$ref": "components/WorkspaceIdDisconnectResponse.json"
      },
      "WorkspaceIdDoubleGoWindowRemainingResponse": {
        "$ref": "components/WorkspaceIdDoubleGoWindowRemainingResponse.json"
      },
      "WorkspaceIdCueListsResponse": {
        "$ref": "components/WorkspaceIdCueListsResponse.json"
      },
      "WorkspaceIdDashboardClearResponse": {
        "$ref": "components/WorkspaceIdDashboardClearResponse.json"
      },
      "WorkspaceIdDashboardRedoResponse": {
        "$ref": "components/WorkspaceIdDashboardRedoResponse.json"
      },
      "WorkspaceIdDashboardModeRequest": {
        "$ref": "components/WorkspaceIdDashboardModeRequest.json"
      },
      "WorkspaceIdDashboardModeResponse": {
        "$ref": "components/WorkspaceIdDashboardModeResponse.json"
      },
      "WorkspaceIdDashboardNextModeResponse": {
        "$ref": "components/WorkspaceIdDashboardNextModeResponse.json"
      },
      "WorkspaceIdDashboardSetLightRequest": {
        "$ref": "components/WorkspaceIdDashboardSetLightRequest.json"
      },
      "WorkspaceIdDashboardSetLightResponse": {
        "$ref": "components/WorkspaceIdDashboardSetLightResponse.json"
      },
      "WorkspaceIdDashboardUndoResponse": {
        "$ref": "components/WorkspaceIdDashboardUndoResponse.json"
      },
      "WorkspaceIdDeleteCueNumberResponse": {
        "$ref": "components/WorkspaceIdDeleteCueNumberResponse.json"
      },
      "WorkspaceIdFullScreenRequest": {
        "$ref": "components/WorkspaceIdFullScreenRequest.json"
      },
      "WorkspaceIdFullScreenResponse": {
        "$ref": "components/WorkspaceIdFullScreenResponse.json"
      },
      "WorkspaceIdToggleFullScreenResponse": {
        "$ref": "components/WorkspaceIdToggleFullScreenResponse.json"
      },
      "WorkspaceIdGoRequest": {
        "$ref": "components/WorkspaceIdGoRequest.json"
      },
      "WorkspaceIdGoResponse": {
        "$ref": "components/WorkspaceIdGoResponse.json"
      },
      "WorkspaceIdGoCueNumberResponse": {
        "$ref": "components/WorkspaceIdGoCueNumberResponse.json"
      },
      "WorkspaceIdLightDashboardRequest": {
        "$ref": "components/WorkspaceIdLightDashboardRequest.json"
      },
      "WorkspaceIdLightDashboardResponse": {
        "$ref": "components/WorkspaceIdLightDashboardResponse.json"
      },
      "WorkspaceIdToggleLightDashboardResponse": {
        "$ref": "components/WorkspaceIdToggleLightDashboardResponse.json"
      },
      "WorkspaceIdMoveCueIdRequest": {
        "$ref": "components/WorkspaceIdMoveCueIdRequest.json"
      },
      "WorkspaceIdMoveCueIdResponse": {
        "$ref": "components/WorkspaceIdMoveCueIdResponse.json"
      },
      "WorkspaceIdNewRequest": {
        "$ref": "components/WorkspaceIdNewRequest.json"
      },
      "WorkspaceIdNewResponse": {
        "$ref": "components/WorkspaceIdNewResponse.json"
      },
      "WorkspaceIdPanicResponse": {
        "$ref": "components/WorkspaceIdPanicResponse.json"
      },
      "WorkspaceIdPanicInTimeRequest": {
        "$ref": "components/WorkspaceIdPanicInTimeRequest.json"
      },
      "WorkspaceIdPanicInTimeResponse": {
        "$ref": "components/WorkspaceIdPanicInTimeResponse.json"
      },
      "WorkspaceIdPauseResponse": {
        "$ref": "components/WorkspaceIdPauseResponse.json"
      },
      "WorkspaceIdPlayheadCueNumberResponse": {
        "$ref": "components/WorkspaceIdPlayheadCueNumberResponse.json"
      },
      "WorkspaceIdPlayheadNextResponse": {
        "$ref": "components/WorkspaceIdPlayheadNextResponse.json"
      },
      "WorkspaceIdPlayheadPreviousResponse": {
        "$ref": "components/WorkspaceIdPlayheadPreviousResponse.json"
      },
      "WorkspaceIdPlayheadNextSequenceResponse": {
        "$ref": "components/WorkspaceIdPlayheadNextSequenceResponse.json"
      },
      "WorkspaceIdPlayheadPreviousSequenceResponse": {
        "$ref": "components/WorkspaceIdPlayheadPreviousSequenceResponse.json"
      },
      "WorkspaceIdRenumberRequest": {
        "$ref": "components/WorkspaceIdRenumberRequest.json"
      },
      "WorkspaceIdRenumberResponse": {
        "$ref": "components/WorkspaceIdRenumberResponse.json"
      },
      "WorkspaceIdResetResponse": {
        "$ref": "components/WorkspaceIdResetResponse.json"
      },
      "WorkspaceIdResumeResponse": {
        "$ref": "components/WorkspaceIdResumeResponse.json"
      },
      "WorkspaceIdSaveResponse": {
        "$ref": "components/WorkspaceIdSaveResponse.json"
      },
      "WorkspaceIdSelectCueNumberResponse": {
        "$ref": "components/WorkspaceIdSelectCueNumberResponse.json"
      },
      "WorkspaceIdSelectNextResponse": {
        "$ref": "components/WorkspaceIdSelectNextResponse.json"
      },
      "WorkspaceIdSelectPreviousResponse": {
        "$ref": "components/WorkspaceIdSelectPreviousResponse.json"
      },
      "WorkspaceIdSelectionIsPlayheadRequest": {
        "$ref": "components/WorkspaceIdSelectionIsPlayheadRequest.json"
      },
      "WorkspaceIdSelectionIsPlayheadResponse": {
        "$ref": "components/WorkspaceIdSelectionIsPlayheadResponse.json"
      },
      "WorkspaceIdToggleSelectionIsPlayheadResponse": {
        "$ref": "components/WorkspaceIdToggleSelectionIsPlayheadResponse.json"
      },
      "WorkspaceIdShowModeRequest": {
        "$ref": "components/WorkspaceIdShowModeRequest.json"
      },
      "WorkspaceIdShowModeResponse": {
        "$ref": "components/WorkspaceIdShowModeResponse.json"
      },
      "WorkspaceIdToggleEditShowModeResponse": {
        "$ref": "components/WorkspaceIdToggleEditShowModeResponse.json"
      },
      "WorkspaceIdStopResponse": {
        "$ref": "components/WorkspaceIdStopResponse.json"
      },
      "WorkspaceIdHardStopResponse": {
        "$ref": "components/WorkspaceIdHardStopResponse.json"
      },
      "WorkspaceIdThumpResponse": {
        "$ref": "components/WorkspaceIdThumpResponse.json"
      },
      "WorkspaceIdUndoResponse": {
        "$ref": "components/WorkspaceIdUndoResponse.json"
      },
      "WorkspaceIdUpdatesRequest": {
        "$ref": "components/WorkspaceIdUpdatesRequest.json"
      },
      "WorkspaceIdUpdatesResponse": {
        "$ref": "components/WorkspaceIdUpdatesResponse.json"
      },
      "SettingsAudioMaxVolumeResponse": {
        "$ref": "components/SettingsAudioMaxVolumeResponse.json"
      },
      "SettingsAudioOutputChannelNamesResponse": {
        "$ref": "components/SettingsAudioOutputChannelNamesResponse.json"
      },
      "SettingsGeneralMinGoTimeRequest": {
        "$ref": "components/SettingsGeneralMinGoTimeRequest.json"
      },
      "SettingsGeneralMinGoTimeResponse": {
        "$ref": "components/SettingsGeneralMinGoTimeResponse.json"
      },
      "SettingsVideoSurfacesResponse": {
        "$ref": "components/SettingsVideoSurfacesResponse.json"
      },
      "SettingsVideoSurfacesSurfaceIDResponse": {
        "$ref": "components/SettingsVideoSurfacesSurfaceIDResponse.json"
      },
      "SettingsVideoSurfacesSurfaceIDScreenIndexEnableGridRequest": {
        "$ref": "components/SettingsVideoSurfacesSurfaceIDScreenIndexEnableGridRequest.json"
      },
      "SettingsVideoSurfacesSurfaceIDScreenIndexEnableGridResponse": {
        "$ref": "components/SettingsVideoSurfacesSurfaceIDScreenIndexEnableGridResponse.json"
      },
      "SettingsVideoSurfacesSurfaceIDScreenIndexEnableGuidesRequest": {
        "$ref": "components/SettingsVideoSurfacesSurfaceIDScreenIndexEnableGuidesRequest.json"
      },
      "SettingsVideoSurfacesSurfaceIDScreenIndexEnableGuidesResponse": {
        "$ref": "components/SettingsVideoSurfacesSurfaceIDScreenIndexEnableGuidesResponse.json"
      },
      "SettingsVideoSurfacesSurfaceIDScreenIndexOriginRequest": {
        "$ref": "components/SettingsVideoSurfacesSurfaceIDScreenIndexOriginRequest.json"
      },
      "SettingsVideoSurfacesSurfaceIDScreenIndexOriginResponse": {
        "$ref": "components/SettingsVideoSurfacesSurfaceIDScreenIndexOriginResponse.json"
      },
      "SettingsVideoSurfacesSurfaceIDScreenIndexControlPointRequest": {
        "$ref": "components/SettingsVideoSurfacesSurfaceIDScreenIndexControlPointRequest.json"
      },
      "SettingsVideoSurfacesSurfaceIDScreenIndexControlPointResponse": {
        "$ref": "components/SettingsVideoSurfacesSurfaceIDScreenIndexControlPointResponse.json"
      },
      "SettingsVideoSurfacesSurfaceIDScreenIndexResetControlPointsResponse": {
        "$ref": "components/SettingsVideoSurfacesSurfaceIDScreenIndexResetControlPointsResponse.json"
      },
      "CueCueNumberActionElapsedResponse": {
        "$ref": "components/CueCueNumberActionElapsedResponse.json"
      },
      "CueCueNumberPercentActionElapsedResponse": {
        "$ref": "components/CueCueNumberPercentActionElapsedResponse.json"
      },
      "CueCueNumberAllowsEditingDurationResponse": {
        "$ref": "components/CueCueNumberAllowsEditingDurationResponse.json"
      },
      "CueCueNumberArmedRequest": {
        "$ref": "components/CueCueNumberArmedRequest.json"
      },
      "CueCueNumberArmedResponse": {
        "$ref": "components/CueCueNumberArmedResponse.json"
      },
      "CueCueNumberAutoLoadRequest": {
        "$ref": "components/CueCueNumberAutoLoadRequest.json"
      },
      "CueCueNumberAutoLoadResponse": {
        "$ref": "components/CueCueNumberAutoLoadResponse.json"
      },
      "CueCueNumberCartPositionResponse": {
        "$ref": "components/CueCueNumberCartPositionResponse.json"
      },
      "CueNumberChildrenShallowResponse": {
        "$ref": "components/CueNumberChildrenShallowResponse.json"
      },
      "CueNumberChildrenUniqueIDsResponse": {
        "$ref": "components/CueNumberChildrenUniqueIDsResponse.json"
      },
      "CueNumberChildrenUniqueIDsShallowResponse": {
        "$ref": "components/CueNumberChildrenUniqueIDsShallowResponse.json"
      },
      "CueCueNumberColorNameRequest": {
        "$ref": "components/CueCueNumberColorNameRequest.json"
      },
      "CueCueNumberColorNameResponse": {
        "$ref": "components/CueCueNumberColorNameResponse.json"
      },
      "CueCueNumberContinueModeRequest": {
        "$ref": "components/CueCueNumberContinueModeRequest.json"
      },
      "CueCueNumberContinueModeResponse": {
        "$ref": "components/CueCueNumberContinueModeResponse.json"
      },
      "CueCueNumberCueTargetIdRequest": {
        "$ref": "components/CueCueNumberCueTargetIdRequest.json"
      },
      "CueCueNumberCueTargetIdResponse": {
        "$ref": "components/CueCueNumberCueTargetIdResponse.json"
      },
      "CueCueNumberCueTargetNumberRequest": {
        "$ref": "components/CueCueNumberCueTargetNumberRequest.json"
      },
      "CueCueNumberCueTargetNumberResponse": {
        "$ref": "components/CueCueNumberCueTargetNumberResponse.json"
      },
      "CueCueNumberCurrentCueTargetResponse": {
        "$ref": "components/CueCueNumberCurrentCueTargetResponse.json"
      },
      "CueCueNumberGoResponse": {
        "$ref": "components/CueCueNumberGoResponse.json"
      },
      "CueCueNumberTempCueTargetNumberRequest": {
        "$ref": "components/CueCueNumberTempCueTargetNumberRequest.json"
      },
      "CueCueNumberTempCueTargetNumberResponse": {
        "$ref": "components/CueCueNumberTempCueTargetNumberResponse.json"
      },
      "CueCueNumberTempCueTargetIdResponse": {
        "$ref": "components/CueCueNumberTempCueTargetIdResponse.json"
      },
      "CueCueNumberCurrentDurationResponse": {
        "$ref": "components/CueCueNumberCurrentDurationResponse.json"
      },
      "CueCueNumberTempDurationRequest": {
        "$ref": "components/CueCueNumberTempDurationRequest.json"
      },
      "CueCueNumberTempDurationResponse": {
        "$ref": "components/CueCueNumberTempDurationResponse.json"
      },
      "CueCueNumberCurrentFileTimeResponse": {
        "$ref": "components/CueCueNumberCurrentFileTimeResponse.json"
      },
      "CueCueNumberDefaultNameResponse": {
        "$ref": "components/CueCueNumberDefaultNameResponse.json"
      },
      "CueCueNumberDisplayNameResponse": {
        "$ref": "components/CueCueNumberDisplayNameResponse.json"
      },
      "CueCueNumberListNameResponse": {
        "$ref": "components/CueCueNumberListNameResponse.json"
      },
      "CueCueNumberDuckLevelRequest": {
        "$ref": "components/CueCueNumberDuckLevelRequest.json"
      },
      "CueCueNumberDuckLevelResponse": {
        "$ref": "components/CueCueNumberDuckLevelResponse.json"
      },
      "CueCueNumberDuckOthersRequest": {
        "$ref": "components/CueCueNumberDuckOthersRequest.json"
      },
      "CueCueNumberDuckOthersResponse": {
        "$ref": "components/CueCueNumberDuckOthersResponse.json"
      },
      "CueCueNumberDuckTimeRequest": {
        "$ref": "components/CueCueNumberDuckTimeRequest.json"
      },
      "CueCueNumberDuckTimeResponse": {
        "$ref": "components/CueCueNumberDuckTimeResponse.json"
      },
      "CueCueNumberDurationRequest": {
        "$ref": "components/CueCueNumberDurationRequest.json"
      },
      "CueCueNumberDurationResponse": {
        "$ref": "components/CueCueNumberDurationResponse.json"
      },
      "CueCueNumberFadeAndStopOthersRequest": {
        "$ref": "components/CueCueNumberFadeAndStopOthersRequest.json"
      },
      "CueCueNumberFadeAndStopOthersResponse": {
        "$ref": "components/CueCueNumberFadeAndStopOthersResponse.json"
      },
      "CueCueNumberFadeAndStopOthersTimeRequest": {
        "$ref": "components/CueCueNumberFadeAndStopOthersTimeRequest.json"
      },
      "CueCueNumberFadeAndStopOthersTimeResponse": {
        "$ref": "components/CueCueNumberFadeAndStopOthersTimeResponse.json"
      },
      "CueCueNumberFileTargetRequest": {
        "$ref": "components/CueCueNumberFileTargetRequest.json"
      },
      "CueCueNumberFileTargetResponse": {
        "$ref": "components/CueCueNumberFileTargetResponse.json"
      },
      "CueCueNumberFlaggedRequest": {
        "$ref": "components/CueCueNumberFlaggedRequest.json"
      },
      "CueCueNumberFlaggedResponse": {
        "$ref": "components/CueCueNumberFlaggedResponse.json"
      },
      "CueCueNumberHasCueTargetsResponse": {
        "$ref": "components/CueCueNumberHasCueTargetsResponse.json"
      },
      "CueCueNumberHasFileTargetsResponse": {
        "$ref": "components/CueCueNumberHasFileTargetsResponse.json"
      },
      "CueCueNumberIsActionRunningResponse": {
        "$ref": "components/CueCueNumberIsActionRunningResponse.json"
      },
      "CueCueNumberIsBrokenResponse": {
        "$ref": "components/CueCueNumberIsBrokenResponse.json"
      },
      "CueCueNumberIsLoadedResponse": {
        "$ref": "components/CueCueNumberIsLoadedResponse.json"
      },
      "CueCueNumberIsOverriddenResponse": {
        "$ref": "components/CueCueNumberIsOverriddenResponse.json"
      },
      "CueCueNumberIsPanickingResponse": {
        "$ref": "components/CueCueNumberIsPanickingResponse.json"
      },
      "CueCueNumberIsPausedResponse": {
        "$ref": "components/CueCueNumberIsPausedResponse.json"
      },
      "CueCueNumberIsRunningResponse": {
        "$ref": "components/CueCueNumberIsRunningResponse.json"
      },
      "CueCueNumberIsTailingOutResponse": {
        "$ref": "components/CueCueNumberIsTailingOutResponse.json"
      },
      "CueCueNumberLoadResponse": {
        "$ref": "components/CueCueNumberLoadResponse.json"
      },
      "CueCueNumberLoadAtRequest": {
        "$ref": "components/CueCueNumberLoadAtRequest.json"
      },
      "CueCueNumberLoadAtResponse": {
        "$ref": "components/CueCueNumberLoadAtResponse.json"
      },
      "CueCueNumberLoadActionAtRequest": {
        "$ref": "components/CueCueNumberLoadActionAtRequest.json"
      },
      "CueCueNumberLoadActionAtResponse": {
        "$ref": "components/CueCueNumberLoadActionAtResponse.json"
      },
      "CueCueNumberLoadAndSetPlayheadResponse": {
        "$ref": "components/CueCueNumberLoadAndSetPlayheadResponse.json"
      },
      "CueCueNumberMaxTimeInCueSequenceResponse": {
        "$ref": "components/CueCueNumberMaxTimeInCueSequenceResponse.json"
      },
      "CueCueNumberNameRequest": {
        "$ref": "components/CueCueNumberNameRequest.json"
      },
      "CueCueNumberNameResponse": {
        "$ref": "components/CueCueNumberNameResponse.json"
      },
      "CueCueNumberNotesRequest": {
        "$ref": "components/CueCueNumberNotesRequest.json"
      },
      "CueCueNumberNotesResponse": {
        "$ref": "components/CueCueNumberNotesResponse.json"
      },
      "CueCueNumberNumberRequest": {
        "$ref": "components/CueCueNumberNumberRequest.json"
      },
      "CueCueNumberNumberResponse": {
        "$ref": "components/CueCueNumberNumberResponse.json"
      },
      "CueCueNumberPanicResponse": {
        "$ref": "components/CueCueNumberPanicResponse.json"
      },
      "CueCueNumberPanicInTimeRequest": {
        "$ref": "components/CueCueNumberPanicInTimeRequest.json"
      },
      "CueCueNumberPanicInTimeResponse": {
        "$ref": "components/CueCueNumberPanicInTimeResponse.json"
      },
      "CueCueNumberPauseResponse": {
        "$ref": "components/CueCueNumberPauseResponse.json"
      },
      "CueCueNumberHardPauseResponse": {
        "$ref": "components/CueCueNumberHardPauseResponse.json"
      },
      "CueCueNumberTogglePauseResponse": {
        "$ref": "components/CueCueNumberTogglePauseResponse.json"
      },
      "CueCueNumberParentResponse": {
        "$ref": "components/CueCueNumberParentResponse.json"
      },
      "CueCueNumberPreviewResponse": {
        "$ref": "components/CueCueNumberPreviewResponse.json"
      },
      "CueCueNumberPreWaitRequest": {
        "$ref": "components/CueCueNumberPreWaitRequest.json"
      },
      "CueCueNumberPreWaitResponse": {
        "$ref": "components/CueCueNumberPreWaitResponse.json"
      },
      "CueCueNumberPreWaitElapsedResponse": {
        "$ref": "components/CueCueNumberPreWaitElapsedResponse.json"
      },
      "CueCueNumberPercentPreWaitElapsedResponse": {
        "$ref": "components/CueCueNumberPercentPreWaitElapsedResponse.json"
      },
      "CueCueNumberPostWaitRequest": {
        "$ref": "components/CueCueNumberPostWaitRequest.json"
      },
      "CueCueNumberPostWaitResponse": {
        "$ref": "components/CueCueNumberPostWaitResponse.json"
      },
      "CueCueNumberPostWaitElapsedResponse": {
        "$ref": "components/CueCueNumberPostWaitElapsedResponse.json"
      },
      "CueCueNumberPercentPostWaitElapsedResponse": {
        "$ref": "components/CueCueNumberPercentPostWaitElapsedResponse.json"
      },
      "CueCueNumberResumeResponse": {
        "$ref": "components/CueCueNumberResumeResponse.json"
      },
      "CueCueNumberResetResponse": {
        "$ref": "components/CueCueNumberResetResponse.json"
      },
      "CueCueNumberSecondTriggerActionRequest": {
        "$ref": "components/CueCueNumberSecondTriggerActionRequest.json"
      },
      "CueCueNumberSecondTriggerActionResponse": {
        "$ref": "components/CueCueNumberSecondTriggerActionResponse.json"
      },
      "CueCueNumberSecondTriggerOnReleaseRequest": {
        "$ref": "components/CueCueNumberSecondTriggerOnReleaseRequest.json"
      },
      "CueCueNumberSecondTriggerOnReleaseResponse": {
        "$ref": "components/CueCueNumberSecondTriggerOnReleaseResponse.json"
      },
      "CueCueNumberSoloCueInTimeRequest": {
        "$ref": "components/CueCueNumberSoloCueInTimeRequest.json"
      },
      "CueCueNumberSoloCueInTimeResponse": {
        "$ref": "components/CueCueNumberSoloCueInTimeResponse.json"
      },
      "CueCueNumberStartResponse": {
        "$ref": "components/CueCueNumberStartResponse.json"
      },
      "CueCueNumberStartAndAutoloadNextResponse": {
        "$ref": "components/CueCueNumberStartAndAutoloadNextResponse.json"
      },
      "CueCueNumberStopResponse": {
        "$ref": "components/CueCueNumberStopResponse.json"
      },
      "CueCueNumberHardStopResponse": {
        "$ref": "components/CueCueNumberHardStopResponse.json"
      },
      "CueCueNumberTypeResponse": {
        "$ref": "components/CueCueNumberTypeResponse.json"
      },
      "CueCueNumberUniqueIDResponse": {
        "$ref": "components/CueCueNumberUniqueIDResponse.json"
      },
      "CueCueNumberValuesForKeysRequest": {
        "$ref": "components/CueCueNumberValuesForKeysRequest.json"
      },
      "CueCueNumberValuesForKeysResponse": {
        "$ref": "components/CueCueNumberValuesForKeysResponse.json"
      },
      "CueCueNumberValuesForKeysWithArgumentsRequest": {
        "$ref": "components/CueCueNumberValuesForKeysWithArgumentsRequest.json"
      },
      "CueCueNumberValuesForKeysWithArgumentsResponse": {
        "$ref": "components/CueCueNumberValuesForKeysWithArgumentsResponse.json"
      },
      "CueCueNumberCartColumnsResponse": {
        "$ref": "components/CueCueNumberCartColumnsResponse.json"
      },
      "CueCueNumberChildrenResponse": {
        "$ref": "components/CueCueNumberChildrenResponse.json"
      },
      "CueCueNumberModeRequest": {
        "$ref": "components/CueCueNumberModeRequest.json"
      },
      "CueCueNumberModeResponse": {
        "$ref": "components/CueCueNumberModeResponse.json"
      },
      "CueCueNumberMoveCartCueChildRequest": {
        "$ref": "components/CueCueNumberMoveCartCueChildRequest.json"
      },
      "CueCueNumberMoveCartCueChildResponse": {
        "$ref": "components/CueCueNumberMoveCartCueChildResponse.json"
      },
      "CueCueNumberPlayheadRequest": {
        "$ref": "components/CueCueNumberPlayheadRequest.json"
      },
      "CueCueNumberPlayheadResponse": {
        "$ref": "components/CueCueNumberPlayheadResponse.json"
      },
      "CueCueNumberPlayheadIdRequest": {
        "$ref": "components/CueCueNumberPlayheadIdRequest.json"
      },
      "CueCueNumberPlayheadIdResponse": {
        "$ref": "components/CueCueNumberPlayheadIdResponse.json"
      },
      "CueCueNumberPlayheadNextResponse": {
        "$ref": "components/CueCueNumberPlayheadNextResponse.json"
      },
      "CueCueNumberPlayheadPreviousResponse": {
        "$ref": "components/CueCueNumberPlayheadPreviousResponse.json"
      },
      "CueCueNumberDoFadeRequest": {
        "$ref": "components/CueCueNumberDoFadeRequest.json"
      },
      "CueCueNumberDoFadeResponse": {
        "$ref": "components/CueCueNumberDoFadeResponse.json"
      },
      "CueCueNumberDoPitchShiftRequest": {
        "$ref": "components/CueCueNumberDoPitchShiftRequest.json"
      },
      "CueCueNumberDoPitchShiftResponse": {
        "$ref": "components/CueCueNumberDoPitchShiftResponse.json"
      },
      "CueCueNumberEndTimeRequest": {
        "$ref": "components/CueCueNumberEndTimeRequest.json"
      },
      "CueCueNumberEndTimeResponse": {
        "$ref": "components/CueCueNumberEndTimeResponse.json"
      },
      "CueCueNumberGangRequest": {
        "$ref": "components/CueCueNumberGangRequest.json"
      },
      "CueCueNumberGangResponse": {
        "$ref": "components/CueCueNumberGangResponse.json"
      },
      "CueCueNumberInfiniteLoopRequest": {
        "$ref": "components/CueCueNumberInfiniteLoopRequest.json"
      },
      "CueCueNumberInfiniteLoopResponse": {
        "$ref": "components/CueCueNumberInfiniteLoopResponse.json"
      },
      "CueCueNumberLevelRequest": {
        "$ref": "components/CueCueNumberLevelRequest.json"
      },
      "CueCueNumberLevelResponse": {
        "$ref": "components/CueCueNumberLevelResponse.json"
      },
      "CueCueNumberLevelsResponse": {
        "$ref": "components/CueCueNumberLevelsResponse.json"
      },
      "CueCueNumberLiveAverageLevelOutputChannelRequest": {
        "$ref": "components/CueCueNumberLiveAverageLevelOutputChannelRequest.json"
      },
      "CueCueNumberLiveAverageLevelOutputChannelResponse": {
        "$ref": "components/CueCueNumberLiveAverageLevelOutputChannelResponse.json"
      },
      "CueCueNumberLockFadeToCueRequest": {
        "$ref": "components/CueCueNumberLockFadeToCueRequest.json"
      },
      "CueCueNumberLockFadeToCueResponse": {
        "$ref": "components/CueCueNumberLockFadeToCueResponse.json"
      },
      "CueCueNumberNumChannelsInResponse": {
        "$ref": "components/CueCueNumberNumChannelsInResponse.json"
      },
      "CueCueNumberPatchRequest": {
        "$ref": "components/CueCueNumberPatchRequest.json"
      },
      "CueCueNumberPatchResponse": {
        "$ref": "components/CueCueNumberPatchResponse.json"
      },
      "CueCueNumberPatchListResponse": {
        "$ref": "components/CueCueNumberPatchListResponse.json"
      },
      "CueCueNumberPlayCountRequest": {
        "$ref": "components/CueCueNumberPlayCountRequest.json"
      },
      "CueCueNumberPlayCountResponse": {
        "$ref": "components/CueCueNumberPlayCountResponse.json"
      },
      "CueCueNumberRateRequest": {
        "$ref": "components/CueCueNumberRateRequest.json"
      },
      "CueCueNumberRateResponse": {
        "$ref": "components/CueCueNumberRateResponse.json"
      },
      "CueCueNumberSetDefaultLevelsResponse": {
        "$ref": "components/CueCueNumberSetDefaultLevelsResponse.json"
      },
      "CueCueNumberSetSilentLevelsResponse": {
        "$ref": "components/CueCueNumberSetSilentLevelsResponse.json"
      },
      "CueCueNumberSliceMarkersResponse": {
        "$ref": "components/CueCueNumberSliceMarkersResponse.json"
      },
      "CueCueNumberSliceMarkerRequest": {
        "$ref": "components/CueCueNumberSliceMarkerRequest.json"
      },
      "CueCueNumberSliceMarkerResponse": {
        "$ref": "components/CueCueNumberSliceMarkerResponse.json"
      },
      "CueCueNumberSliceMarkerIndexTimeResponse": {
        "$ref": "components/CueCueNumberSliceMarkerIndexTimeResponse.json"
      },
      "CueCueNumberSliceMarkerIndexPlayCountResponse": {
        "$ref": "components/CueCueNumberSliceMarkerIndexPlayCountResponse.json"
      },
      "CueCueNumberAddSliceMarkerRequest": {
        "$ref": "components/CueCueNumberAddSliceMarkerRequest.json"
      },
      "CueCueNumberAddSliceMarkerResponse": {
        "$ref": "components/CueCueNumberAddSliceMarkerResponse.json"
      },
      "CueCueNumberDeleteSliceMarkerRequest": {
        "$ref": "components/CueCueNumberDeleteSliceMarkerRequest.json"
      },
      "CueCueNumberDeleteSliceMarkerResponse": {
        "$ref": "components/CueCueNumberDeleteSliceMarkerResponse.json"
      },
      "CueCueNumberDeleteSliceMarkersResponse": {
        "$ref": "components/CueCueNumberDeleteSliceMarkersResponse.json"
      },
      "CueCueNumberSliceMarkerIndexTimeRequest": {
        "$ref": "components/CueCueNumberSliceMarkerIndexTimeRequest.json"
      },
      "CueCueNumberSliceMarkerIndexTimePlusRequest": {
        "$ref": "components/CueCueNumberSliceMarkerIndexTimePlusRequest.json"
      },
      "CueCueNumberSliceMarkerIndexTimePlusResponse": {
        "$ref": "components/CueCueNumberSliceMarkerIndexTimePlusResponse.json"
      },
      "CueCueNumberSliceMarkersTimePlusRequest": {
        "$ref": "components/CueCueNumberSliceMarkersTimePlusRequest.json"
      },
      "CueCueNumberSliceMarkersTimePlusResponse": {
        "$ref": "components/CueCueNumberSliceMarkersTimePlusResponse.json"
      },
      "CueCueNumberSliceMarkerIndexPlayCountRequest": {
        "$ref": "components/CueCueNumberSliceMarkerIndexPlayCountRequest.json"
      },
      "CueCueNumberSliceMarkerIndexPlayCountPlusRequest": {
        "$ref": "components/CueCueNumberSliceMarkerIndexPlayCountPlusRequest.json"
      },
      "CueCueNumberSliceMarkerIndexPlayCountPlusResponse": {
        "$ref": "components/CueCueNumberSliceMarkerIndexPlayCountPlusResponse.json"
      },
      "CueCueNumberLastSlicePlayCountRequest": {
        "$ref": "components/CueCueNumberLastSlicePlayCountRequest.json"
      },
      "CueCueNumberLastSlicePlayCountResponse": {
        "$ref": "components/CueCueNumberLastSlicePlayCountResponse.json"
      },
      "CueCueNumberLastSliceInfiniteLoopRequest": {
        "$ref": "components/CueCueNumberLastSliceInfiniteLoopRequest.json"
      },
      "CueCueNumberLastSliceInfiniteLoopResponse": {
        "$ref": "components/CueCueNumberLastSliceInfiniteLoopResponse.json"
      },
      "CueCueNumberSliderLevelRequest": {
        "$ref": "components/CueCueNumberSliderLevelRequest.json"
      },
      "CueCueNumberSliderLevelResponse": {
        "$ref": "components/CueCueNumberSliderLevelResponse.json"
      },
      "CueCueNumberSliderLevelsResponse": {
        "$ref": "components/CueCueNumberSliderLevelsResponse.json"
      },
      "CueCueNumberStartTimeRequest": {
        "$ref": "components/CueCueNumberStartTimeRequest.json"
      },
      "CueCueNumberStartTimeResponse": {
        "$ref": "components/CueCueNumberStartTimeResponse.json"
      },
      "CueCueNumberChannelOffsetResponse": {
        "$ref": "components/CueCueNumberChannelOffsetResponse.json"
      },
      "CueCueNumberChannelsRequest": {
        "$ref": "components/CueCueNumberChannelsRequest.json"
      },
      "CueCueNumberChannelsResponse": {
        "$ref": "components/CueCueNumberChannelsResponse.json"
      },
      "CueCueNumberCueSizeResponse": {
        "$ref": "components/CueCueNumberCueSizeResponse.json"
      },
      "CueCueNumberDoEffectRequest": {
        "$ref": "components/CueCueNumberDoEffectRequest.json"
      },
      "CueCueNumberDoEffectResponse": {
        "$ref": "components/CueCueNumberDoEffectResponse.json"
      },
      "CueCueNumberEffectIndexRequest": {
        "$ref": "components/CueCueNumberEffectIndexRequest.json"
      },
      "CueCueNumberEffectIndexResponse": {
        "$ref": "components/CueCueNumberEffectIndexResponse.json"
      },
      "CueCueNumberEffectSetRequest": {
        "$ref": "components/CueCueNumberEffectSetRequest.json"
      },
      "CueCueNumberEffectSetResponse": {
        "$ref": "components/CueCueNumberEffectSetResponse.json"
      },
      "CueCueNumberFullScreenRequest": {
        "$ref": "components/CueCueNumberFullScreenRequest.json"
      },
      "CueCueNumberFullScreenResponse": {
        "$ref": "components/CueCueNumberFullScreenResponse.json"
      },
      "CueCueNumberHoldLastFrameRequest": {
        "$ref": "components/CueCueNumberHoldLastFrameRequest.json"
      },
      "CueCueNumberHoldLastFrameResponse": {
        "$ref": "components/CueCueNumberHoldLastFrameResponse.json"
      },
      "CueCueNumberLayerRequest": {
        "$ref": "components/CueCueNumberLayerRequest.json"
      },
      "CueCueNumberLayerResponse": {
        "$ref": "components/CueCueNumberLayerResponse.json"
      },
      "CueCueNumberOpacityRequest": {
        "$ref": "components/CueCueNumberOpacityRequest.json"
      },
      "CueCueNumberOpacityResponse": {
        "$ref": "components/CueCueNumberOpacityResponse.json"
      },
      "CueCueNumberOriginXRequest": {
        "$ref": "components/CueCueNumberOriginXRequest.json"
      },
      "CueCueNumberOriginXResponse": {
        "$ref": "components/CueCueNumberOriginXResponse.json"
      },
      "CueCueNumberOriginYRequest": {
        "$ref": "components/CueCueNumberOriginYRequest.json"
      },
      "CueCueNumberOriginYResponse": {
        "$ref": "components/CueCueNumberOriginYResponse.json"
      },
      "CueCueNumberOriginRequest": {
        "$ref": "components/CueCueNumberOriginRequest.json"
      },
      "CueCueNumberOriginResponse": {
        "$ref": "components/CueCueNumberOriginResponse.json"
      },
      "CueCueNumberPreserveAspectRatioRequest": {
        "$ref": "components/CueCueNumberPreserveAspectRatioRequest.json"
      },
      "CueCueNumberPreserveAspectRatioResponse": {
        "$ref": "components/CueCueNumberPreserveAspectRatioResponse.json"
      },
      "CueCueNumberQuaternionRequest": {
        "$ref": "components/CueCueNumberQuaternionRequest.json"
      },
      "CueCueNumberQuaternionResponse": {
        "$ref": "components/CueCueNumberQuaternionResponse.json"
      },
      "CueCueNumberLiveRateRequest": {
        "$ref": "components/CueCueNumberLiveRateRequest.json"
      },
      "CueCueNumberLiveRateResponse": {
        "$ref": "components/CueCueNumberLiveRateResponse.json"
      },
      "CueCueNumberResetRotationResponse": {
        "$ref": "components/CueCueNumberResetRotationResponse.json"
      },
      "CueCueNumberRotateXRequest": {
        "$ref": "components/CueCueNumberRotateXRequest.json"
      },
      "CueCueNumberRotateXResponse": {
        "$ref": "components/CueCueNumberRotateXResponse.json"
      },
      "CueCueNumberLiveRotationXaxisRequest": {
        "$ref": "components/CueCueNumberLiveRotationXaxisRequest.json"
      },
      "CueCueNumberLiveRotationXaxisResponse": {
        "$ref": "components/CueCueNumberLiveRotationXaxisResponse.json"
      },
      "CueCueNumberScaleXRequest": {
        "$ref": "components/CueCueNumberScaleXRequest.json"
      },
      "CueCueNumberScaleXResponse": {
        "$ref": "components/CueCueNumberScaleXResponse.json"
      },
      "CueCueNumberScaleYRequest": {
        "$ref": "components/CueCueNumberScaleYRequest.json"
      },
      "CueCueNumberScaleYResponse": {
        "$ref": "components/CueCueNumberScaleYResponse.json"
      },
      "CueCueNumberScaleRequest": {
        "$ref": "components/CueCueNumberScaleRequest.json"
      },
      "CueCueNumberScaleResponse": {
        "$ref": "components/CueCueNumberScaleResponse.json"
      },
      "CueCueNumberSurfaceIDRequest": {
        "$ref": "components/CueCueNumberSurfaceIDRequest.json"
      },
      "CueCueNumberSurfaceIDResponse": {
        "$ref": "components/CueCueNumberSurfaceIDResponse.json"
      },
      "CueCueNumberSurfaceListResponse": {
        "$ref": "components/CueCueNumberSurfaceListResponse.json"
      },
      "CueCueNumberSurfaceNameRequest": {
        "$ref": "components/CueCueNumberSurfaceNameRequest.json"
      },
      "CueCueNumberSurfaceNameResponse": {
        "$ref": "components/CueCueNumberSurfaceNameResponse.json"
      },
      "CueCueNumberSurfaceSizeResponse": {
        "$ref": "components/CueCueNumberSurfaceSizeResponse.json"
      },
      "CueCueNumberTranslationXRequest": {
        "$ref": "components/CueCueNumberTranslationXRequest.json"
      },
      "CueCueNumberTranslationXResponse": {
        "$ref": "components/CueCueNumberTranslationXResponse.json"
      },
      "CueCueNumberTranslationYRequest": {
        "$ref": "components/CueCueNumberTranslationYRequest.json"
      },
      "CueCueNumberTranslationYResponse": {
        "$ref": "components/CueCueNumberTranslationYResponse.json"
      },
      "CueCueNumberTranslationRequest": {
        "$ref": "components/CueCueNumberTranslationRequest.json"
      },
      "CueCueNumberTranslationResponse": {
        "$ref": "components/CueCueNumberTranslationResponse.json"
      },
      "CueCueNumberCameraPatchResponse": {
        "$ref": "components/CueCueNumberCameraPatchResponse.json"
      },
      "CueCueNumberFixedWidthRequest": {
        "$ref": "components/CueCueNumberFixedWidthRequest.json"
      },
      "CueCueNumberFixedWidthResponse": {
        "$ref": "components/CueCueNumberFixedWidthResponse.json"
      },
      "CueCueNumberTextRequest": {
        "$ref": "components/CueCueNumberTextRequest.json"
      },
      "CueCueNumberTextResponse": {
        "$ref": "components/CueCueNumberTextResponse.json"
      },
      "CueCueNumberTextFormatRequest": {
        "$ref": "components/CueCueNumberTextFormatRequest.json"
      },
      "CueCueNumberTextFormatResponse": {
        "$ref": "components/CueCueNumberTextFormatResponse.json"
      },
      "CueCueNumberTextFormatAlignmentRequest": {
        "$ref": "components/CueCueNumberTextFormatAlignmentRequest.json"
      },
      "CueCueNumberTextFormatAlignmentResponse": {
        "$ref": "components/CueCueNumberTextFormatAlignmentResponse.json"
      },
      "CueCueNumberTextFormatFontFamilyResponse": {
        "$ref": "components/CueCueNumberTextFormatFontFamilyResponse.json"
      },
      "CueCueNumberTextFormatFontStyleResponse": {
        "$ref": "components/CueCueNumberTextFormatFontStyleResponse.json"
      },
      "CueCueNumberTextFormatFontFamilyAndStyleRequest": {
        "$ref": "components/CueCueNumberTextFormatFontFamilyAndStyleRequest.json"
      },
      "CueCueNumberTextFormatFontFamilyAndStyleResponse": {
        "$ref": "components/CueCueNumberTextFormatFontFamilyAndStyleResponse.json"
      },
      "CueCueNumberTextFormatFontNameRequest": {
        "$ref": "components/CueCueNumberTextFormatFontNameRequest.json"
      },
      "CueCueNumberTextFormatFontNameResponse": {
        "$ref": "components/CueCueNumberTextFormatFontNameResponse.json"
      },
      "CueCueNumberTextFormatFontSizeRequest": {
        "$ref": "components/CueCueNumberTextFormatFontSizeRequest.json"
      },
      "CueCueNumberTextFormatFontSizeResponse": {
        "$ref": "components/CueCueNumberTextFormatFontSizeResponse.json"
      },
      "CueCueNumberTextFormatLineSpacingRequest": {
        "$ref": "components/CueCueNumberTextFormatLineSpacingRequest.json"
      },
      "CueCueNumberTextFormatLineSpacingResponse": {
        "$ref": "components/CueCueNumberTextFormatLineSpacingResponse.json"
      },
      "CueCueNumberTextFormatColorRequest": {
        "$ref": "components/CueCueNumberTextFormatColorRequest.json"
      },
      "CueCueNumberTextFormatColorResponse": {
        "$ref": "components/CueCueNumberTextFormatColorResponse.json"
      },
      "CueCueNumberTextFormatStrikethroughStyleRequest": {
        "$ref": "components/CueCueNumberTextFormatStrikethroughStyleRequest.json"
      },
      "CueCueNumberTextFormatStrikethroughStyleResponse": {
        "$ref": "components/CueCueNumberTextFormatStrikethroughStyleResponse.json"
      },
      "CueCueNumberTextOutputSizeResponse": {
        "$ref": "components/CueCueNumberTextOutputSizeResponse.json"
      },
      "CueCueNumberAlwaysCollateRequest": {
        "$ref": "components/CueCueNumberAlwaysCollateRequest.json"
      },
      "CueCueNumberAlwaysCollateResponse": {
        "$ref": "components/CueCueNumberAlwaysCollateResponse.json"
      },
      "CueCueNumberCollateAndStartResponse": {
        "$ref": "components/CueCueNumberCollateAndStartResponse.json"
      },
      "CueCueNumberLightCommandTextRequest": {
        "$ref": "components/CueCueNumberLightCommandTextRequest.json"
      },
      "CueCueNumberLightCommandTextResponse": {
        "$ref": "components/CueCueNumberLightCommandTextResponse.json"
      },
      "CueCueNumberPruneResponse": {
        "$ref": "components/CueCueNumberPruneResponse.json"
      },
      "CueCueNumberRemoveLightCommandsMatchingRequest": {
        "$ref": "components/CueCueNumberRemoveLightCommandsMatchingRequest.json"
      },
      "CueCueNumberRemoveLightCommandsMatchingResponse": {
        "$ref": "components/CueCueNumberRemoveLightCommandsMatchingResponse.json"
      },
      "CueCueNumberReplaceLightCommandRequest": {
        "$ref": "components/CueCueNumberReplaceLightCommandRequest.json"
      },
      "CueCueNumberReplaceLightCommandResponse": {
        "$ref": "components/CueCueNumberReplaceLightCommandResponse.json"
      },
      "CueCueNumberSafeSortResponse": {
        "$ref": "components/CueCueNumberSafeSortResponse.json"
      },
      "CueCueNumberSetLightRequest": {
        "$ref": "components/CueCueNumberSetLightRequest.json"
      },
      "CueCueNumberSetLightResponse": {
        "$ref": "components/CueCueNumberSetLightResponse.json"
      },
      "CueCueNumberUpdateLightCommandRequest": {
        "$ref": "components/CueCueNumberUpdateLightCommandRequest.json"
      },
      "CueCueNumberUpdateLightCommandResponse": {
        "$ref": "components/CueCueNumberUpdateLightCommandResponse.json"
      },
      "CueCueNumberDoOpacityRequest": {
        "$ref": "components/CueCueNumberDoOpacityRequest.json"
      },
      "CueCueNumberDoOpacityResponse": {
        "$ref": "components/CueCueNumberDoOpacityResponse.json"
      },
      "CueCueNumberGeoModeRequest": {
        "$ref": "components/CueCueNumberGeoModeRequest.json"
      },
      "CueCueNumberGeoModeResponse": {
        "$ref": "components/CueCueNumberGeoModeResponse.json"
      },
      "CueCueNumberRotationRequest": {
        "$ref": "components/CueCueNumberRotationRequest.json"
      },
      "CueCueNumberRotationResponse": {
        "$ref": "components/CueCueNumberRotationResponse.json"
      },
      "CueCueNumberRotationTypeRequest": {
        "$ref": "components/CueCueNumberRotationTypeRequest.json"
      },
      "CueCueNumberRotationTypeResponse": {
        "$ref": "components/CueCueNumberRotationTypeResponse.json"
      },
      "CueCueNumberSetLevelsFromTargetResponse": {
        "$ref": "components/CueCueNumberSetLevelsFromTargetResponse.json"
      },
      "CueCueNumberSetGeometryFromTargetResponse": {
        "$ref": "components/CueCueNumberSetGeometryFromTargetResponse.json"
      },
      "CueCueNumberStopTargetWhenDoneRequest": {
        "$ref": "components/CueCueNumberStopTargetWhenDoneRequest.json"
      },
      "CueCueNumberStopTargetWhenDoneResponse": {
        "$ref": "components/CueCueNumberStopTargetWhenDoneResponse.json"
      },
      "CueCueNumberWillFadeRequest": {
        "$ref": "components/CueCueNumberWillFadeRequest.json"
      },
      "CueCueNumberWillFadeResponse": {
        "$ref": "components/CueCueNumberWillFadeResponse.json"
      },
      "CueCueNumberCustomStringRequest": {
        "$ref": "components/CueCueNumberCustomStringRequest.json"
      },
      "CueCueNumberCustomStringResponse": {
        "$ref": "components/CueCueNumberCustomStringResponse.json"
      },
      "CueCueNumberMessageTypeRequest": {
        "$ref": "components/CueCueNumberMessageTypeRequest.json"
      },
      "CueCueNumberMessageTypeResponse": {
        "$ref": "components/CueCueNumberMessageTypeResponse.json"
      },
      "CueCueNumberQlabCommandRequest": {
        "$ref": "components/CueCueNumberQlabCommandRequest.json"
      },
      "CueCueNumberQlabCommandResponse": {
        "$ref": "components/CueCueNumberQlabCommandResponse.json"
      },
      "CueCueNumberQlabCueNumberRequest": {
        "$ref": "components/CueCueNumberQlabCueNumberRequest.json"
      },
      "CueCueNumberQlabCueNumberResponse": {
        "$ref": "components/CueCueNumberQlabCueNumberResponse.json"
      },
      "CueCueNumberQlabCueParametersRequest": {
        "$ref": "components/CueCueNumberQlabCueParametersRequest.json"
      },
      "CueCueNumberQlabCueParametersResponse": {
        "$ref": "components/CueCueNumberQlabCueParametersResponse.json"
      },
      "CueCueNumberRawStringRequest": {
        "$ref": "components/CueCueNumberRawStringRequest.json"
      },
      "CueCueNumberRawStringResponse": {
        "$ref": "components/CueCueNumberRawStringResponse.json"
      },
      "CueCueNumberByte1Request": {
        "$ref": "components/CueCueNumberByte1Request.json"
      },
      "CueCueNumberByte1Response": {
        "$ref": "components/CueCueNumberByte1Response.json"
      },
      "CueCueNumberByte2Request": {
        "$ref": "components/CueCueNumberByte2Request.json"
      },
      "CueCueNumberByte2Response": {
        "$ref": "components/CueCueNumberByte2Response.json"
      },
      "CueCueNumberByteComboRequest": {
        "$ref": "components/CueCueNumberByteComboRequest.json"
      },
      "CueCueNumberByteComboResponse": {
        "$ref": "components/CueCueNumberByteComboResponse.json"
      },
      "CueCueNumberChannelRequest": {
        "$ref": "components/CueCueNumberChannelRequest.json"
      },
      "CueCueNumberChannelResponse": {
        "$ref": "components/CueCueNumberChannelResponse.json"
      },
      "CueCueNumberCommandRequest": {
        "$ref": "components/CueCueNumberCommandRequest.json"
      },
      "CueCueNumberCommandResponse": {
        "$ref": "components/CueCueNumberCommandResponse.json"
      },
      "CueCueNumberCommandFormatRequest": {
        "$ref": "components/CueCueNumberCommandFormatRequest.json"
      },
      "CueCueNumberCommandFormatResponse": {
        "$ref": "components/CueCueNumberCommandFormatResponse.json"
      },
      "CueCueNumberControlNumberRequest": {
        "$ref": "components/CueCueNumberControlNumberRequest.json"
      },
      "CueCueNumberControlNumberResponse": {
        "$ref": "components/CueCueNumberControlNumberResponse.json"
      },
      "CueCueNumberControlValueRequest": {
        "$ref": "components/CueCueNumberControlValueRequest.json"
      },
      "CueCueNumberControlValueResponse": {
        "$ref": "components/CueCueNumberControlValueResponse.json"
      },
      "CueCueNumberDeviceIDRequest": {
        "$ref": "components/CueCueNumberDeviceIDRequest.json"
      },
      "CueCueNumberDeviceIDResponse": {
        "$ref": "components/CueCueNumberDeviceIDResponse.json"
      },
      "CueCueNumberEndValueRequest": {
        "$ref": "components/CueCueNumberEndValueRequest.json"
      },
      "CueCueNumberEndValueResponse": {
        "$ref": "components/CueCueNumberEndValueResponse.json"
      },
      "CueCueNumberHoursRequest": {
        "$ref": "components/CueCueNumberHoursRequest.json"
      },
      "CueCueNumberHoursResponse": {
        "$ref": "components/CueCueNumberHoursResponse.json"
      },
      "CueCueNumberMacroRequest": {
        "$ref": "components/CueCueNumberMacroRequest.json"
      },
      "CueCueNumberMacroResponse": {
        "$ref": "components/CueCueNumberMacroResponse.json"
      },
      "CueCueNumberQListRequest": {
        "$ref": "components/CueCueNumberQListRequest.json"
      },
      "CueCueNumberQListResponse": {
        "$ref": "components/CueCueNumberQListResponse.json"
      },
      "CueCueNumberQNumberRequest": {
        "$ref": "components/CueCueNumberQNumberRequest.json"
      },
      "CueCueNumberQNumberResponse": {
        "$ref": "components/CueCueNumberQNumberResponse.json"
      },
      "CueCueNumberQPathRequest": {
        "$ref": "components/CueCueNumberQPathRequest.json"
      },
      "CueCueNumberQPathResponse": {
        "$ref": "components/CueCueNumberQPathResponse.json"
      },
      "CueCueNumberStatusRequest": {
        "$ref": "components/CueCueNumberStatusRequest.json"
      },
      "CueCueNumberStatusResponse": {
        "$ref": "components/CueCueNumberStatusResponse.json"
      },
      "CueCueNumberTimecodeFormatRequest": {
        "$ref": "components/CueCueNumberTimecodeFormatRequest.json"
      },
      "CueCueNumberTimecodeFormatResponse": {
        "$ref": "components/CueCueNumberTimecodeFormatResponse.json"
      },
      "CueCueNumberTimecodeStringRequest": {
        "$ref": "components/CueCueNumberTimecodeStringRequest.json"
      },
      "CueCueNumberTimecodeStringResponse": {
        "$ref": "components/CueCueNumberTimecodeStringResponse.json"
      },
      "CueCueNumberStartNextCueWhenSliceEndsRequest": {
        "$ref": "components/CueCueNumberStartNextCueWhenSliceEndsRequest.json"
      },
      "CueCueNumberStartNextCueWhenSliceEndsResponse": {
        "$ref": "components/CueCueNumberStartNextCueWhenSliceEndsResponse.json"
      },
      "CueCueNumberStopTargetWhenSliceEndsRequest": {
        "$ref": "components/CueCueNumberStopTargetWhenSliceEndsRequest.json"
      },
      "CueCueNumberStopTargetWhenSliceEndsResponse": {
        "$ref": "components/CueCueNumberStopTargetWhenSliceEndsResponse.json"
      },
      "CueCueNumberCompileSourceResponse": {
        "$ref": "components/CueCueNumberCompileSourceResponse.json"
      },
      "CueCueNumberScriptSourceResponse": {
        "$ref": "components/CueCueNumberScriptSourceResponse.json"
      }
    }
  }
}
